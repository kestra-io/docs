openapi: 3.0.1
info:
  title: Kestra
  license:
    name: Apache 2.0
    url: https://raw.githubusercontent.com/kestra-io/kestra/master/LICENSE
  version: v1
tags:
- name: Flows
  description: Flows API
- name: Templates
  description: Templates API
- name: Executions
  description: Executions API
- name: Logs
  description: Logs API
- name: Plugins
  description: Plugins API
- name: Stats
  description: Stats API
- name: Misc
  description: Misc API
- name: Blueprints
  description: Blueprints API
- name: Metrics
  description: Metrics API
paths:
  /api/v1/configs:
    get:
      tags:
      - Misc
      summary: Get current configurations
      operationId: getConfiguration
      responses:
        "200":
          description: getConfiguration 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MiscController.Configuration"
  /api/v1/main/basicAuth:
    post:
      tags:
      - Misc
      summary: Create basic auth for the current instance
      operationId: createBasicAuth
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MiscController.BasicAuthCredentials"
        required: true
      responses:
        "200":
          description: createBasicAuth 200 response
  /api/v1/main/usages/all:
    get:
      tags:
      - Misc
      summary: Get instance usage information
      operationId: getUsages
      responses:
        "200":
          description: getUsages 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usage"
  /api/v1/{tenant}/blueprints/community/{kind}:
    get:
      tags:
      - Blueprints
      summary: List all blueprints
      operationId: searchBlueprints
      parameters:
      - name: q
        in: query
        description: A string filter
        schema:
          type: string
          nullable: true
      - name: sort
        in: query
        description: The sort of current page
        schema:
          type: string
          nullable: true
      - name: tags
        in: query
        description: A tags filter
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: page
        in: query
        description: The current page
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        description: The current page size
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: kind
        in: path
        description: The blueprint kind
        required: true
        schema:
          $ref: "#/components/schemas/BlueprintController.Kind"
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: searchBlueprints 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_BlueprintController.ApiBlueprintItem_"
  /api/v1/{tenant}/blueprints/community/{kind}/tags:
    get:
      tags:
      - Blueprint Tags
      summary: List blueprint tags matching the filter
      operationId: listBlueprintTags
      parameters:
      - name: kind
        in: path
        description: The blueprint kind
        required: true
        schema:
          $ref: "#/components/schemas/BlueprintController.Kind"
      - name: q
        in: query
        description: A string filter to get tags with matching blueprints only
        schema:
          type: string
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: listBlueprintTags 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BlueprintController.ApiBlueprintTagItem"
  /api/v1/{tenant}/blueprints/community/{kind}/{id}:
    get:
      tags:
      - Blueprints
      summary: Get a blueprint
      operationId: getBlueprint
      parameters:
      - name: id
        in: path
        description: The blueprint id
        required: true
        schema:
          type: string
      - name: kind
        in: path
        description: The blueprint kind
        required: true
        schema:
          $ref: "#/components/schemas/BlueprintController.Kind"
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getBlueprint 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BlueprintController.ApiBlueprintItemWithSource"
  /api/v1/{tenant}/blueprints/community/{kind}/{id}/graph:
    get:
      tags:
      - Blueprints
      summary: Get a blueprint graph
      operationId: getBlueprintGraph
      parameters:
      - name: id
        in: path
        description: The blueprint id
        required: true
        schema:
          type: string
      - name: kind
        in: path
        description: The blueprint kind
        required: true
        schema:
          $ref: "#/components/schemas/BlueprintController.Kind"
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getBlueprintGraph 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /api/v1/{tenant}/blueprints/community/{kind}/{id}/source:
    get:
      tags:
      - Blueprints
      summary: Get a blueprint flow
      operationId: getBlueprintSource
      parameters:
      - name: id
        in: path
        description: The blueprint id
        required: true
        schema:
          type: string
      - name: kind
        in: path
        description: The blueprint kind
        required: true
        schema:
          $ref: "#/components/schemas/BlueprintController.Kind"
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getBlueprintSource 200 response
          content:
            application/yaml:
              schema:
                type: string
  /api/v1/{tenant}/cluster/services/{id}:
    get:
      tags:
      - Services
      summary: Get details about a service
      operationId: getService
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getService 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServiceInstance"
  /api/v1/{tenant}/dashboards:
    get:
      tags:
      - Dashboards
      summary: Search for dashboards
      operationId: searchDashboards
      parameters:
      - name: page
        in: query
        description: The current page
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        description: The current page size
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 10
      - name: q
        in: query
        description: The filter query
        schema:
          type: string
          nullable: true
      - name: sort
        in: query
        description: The sort of current page
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: searchDashboards 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_Dashboard_"
    post:
      tags:
      - Dashboards
      summary: Create a dashboard from yaml source
      operationId: createDashboard
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The dashboard definition as YAML
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: createDashboard 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dashboard"
  /api/v1/{tenant}/dashboards/charts/preview:
    post:
      tags:
      - Dashboards
      summary: Preview a chart data
      operationId: previewChart
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DashboardController.PreviewRequest"
        required: true
      responses:
        "200":
          description: previewChart 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_Map_String.Object__"
  /api/v1/{tenant}/dashboards/validate:
    post:
      tags:
      - Dashboards
      summary: Validate dashboard from yaml source
      operationId: validateDashboard
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The dashboard definition as YAML
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: validateDashboard 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateConstraintViolation"
  /api/v1/{tenant}/dashboards/validate/chart:
    post:
      tags:
      - Dashboards
      summary: Validate a chart from yaml source
      operationId: validateChart
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The chart definition as YAML
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: validateChart 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateConstraintViolation"
  /api/v1/{tenant}/dashboards/{id}:
    get:
      tags:
      - Dashboards
      summary: Get a dashboard
      operationId: getDashboard
      parameters:
      - name: id
        in: path
        description: The dashboard id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getDashboard 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dashboard"
    put:
      tags:
      - Dashboards
      summary: Update a dashboard
      operationId: updateDashboard
      parameters:
      - name: id
        in: path
        description: The dashboard id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The dashboard definition as YAML
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: updateDashboard 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Dashboard"
    delete:
      tags:
      - Dashboards
      summary: Delete a dashboard
      operationId: deleteDashboard
      parameters:
      - name: id
        in: path
        description: The dashboard id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: deleteDashboard 200 response
  /api/v1/{tenant}/dashboards/{id}/charts/{chartId}:
    post:
      tags:
      - Dashboards
      summary: Generate a dashboard chart data
      operationId: getDashboardChartData
      parameters:
      - name: id
        in: path
        description: The dashboard id
        required: true
        schema:
          type: string
      - name: chartId
        in: path
        description: The chart id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: "The filters to apply, some can override chart definition like\
          \ labels & namespace"
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlobalFilter"
        required: true
      responses:
        "200":
          description: getDashboardChartData 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_Map_String.Object__"
  /api/v1/{tenant}/executions:
    get:
      tags:
      - Executions
      summary: Search for executions for a flow
      operationId: searchExecutionsByFlowId
      parameters:
      - name: namespace
        in: query
        description: The flow namespace
        required: true
        schema:
          type: string
      - name: flowId
        in: query
        description: The flow id
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: The current page
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        description: The current page size
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 10
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: searchExecutionsByFlowId 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_Execution_"
  /api/v1/{tenant}/executions/by-ids:
    delete:
      tags:
      - Executions
      summary: Delete a list of executions
      operationId: deleteExecutionsByIds
      parameters:
      - name: includeNonTerminated
        in: query
        description: Whether to delete non-terminated executions
        schema:
          type: boolean
          nullable: true
          default: false
      - name: deleteLogs
        in: query
        description: Whether to delete execution logs
        required: true
        schema:
          type: boolean
          default: true
      - name: deleteMetrics
        in: query
        description: Whether to delete execution metrics
        required: true
        schema:
          type: boolean
          default: true
      - name: deleteStorage
        in: query
        description: Whether to delete execution files in the internal storage
        required: true
        schema:
          type: boolean
          default: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The execution id
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: On success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
        "422":
          description: Deleted with errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
  /api/v1/{tenant}/executions/by-query:
    delete:
      tags:
      - Executions
      summary: Delete executions filter by query parameters
      operationId: deleteExecutionsByQuery
      parameters:
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: scope
        in: query
        description: The scope of the executions to include
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/FlowScope"
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: flowId
        in: query
        description: A flow id filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: startDate
        in: query
        description: The start datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: endDate
        in: query
        description: The end datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: timeRange
        in: query
        description: A time range filter relative to the current time
        deprecated: true
        schema:
          type: string
          nullable: true
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
      - name: state
        in: query
        description: A state filter
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/State.Type"
      - name: labels
        in: query
        description: A labels filter as a list of 'key:value'
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: triggerExecutionId
        in: query
        description: The trigger execution id
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: childFilter
        in: query
        description: A execution child filter
        deprecated: true
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
      - name: includeNonTerminated
        in: query
        description: Whether to delete non-terminated executions
        schema:
          type: boolean
          nullable: true
          default: false
      - name: deleteLogs
        in: query
        description: Whether to delete execution logs
        required: true
        schema:
          type: boolean
          default: true
      - name: deleteMetrics
        in: query
        description: Whether to delete execution metrics
        required: true
        schema:
          type: boolean
          default: true
      - name: deleteStorage
        in: query
        description: Whether to delete execution files in the internal storage
        required: true
        schema:
          type: boolean
          default: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: array
                  description: Filters
                  items:
                    $ref: "#/components/schemas/QueryFilter"
        required: true
      responses:
        "200":
          description: deleteExecutionsByQuery 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/executions/change-status/by-ids:
    post:
      tags:
      - Executions
      summary: Change executions state by id
      operationId: updateExecutionsStatusByIds
      parameters:
      - name: newStatus
        in: query
        description: The new state of the executions
        required: true
        schema:
          $ref: "#/components/schemas/State.Type"
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The list of executions id
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: On success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
        "422":
          description: Changed state with errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
  /api/v1/{tenant}/executions/change-status/by-query:
    post:
      tags:
      - Executions
      summary: Change executions state by query parameters
      operationId: updateExecutionsStatusByQuery
      parameters:
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: scope
        in: query
        description: The scope of the executions to include
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/FlowScope"
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: flowId
        in: query
        description: A flow id filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: startDate
        in: query
        description: The start datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: endDate
        in: query
        description: The end datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: timeRange
        in: query
        description: A time range filter relative to the current time
        deprecated: true
        schema:
          type: string
          nullable: true
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
      - name: state
        in: query
        description: A state filter
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/State.Type"
      - name: labels
        in: query
        description: A labels filter as a list of 'key:value'
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: triggerExecutionId
        in: query
        description: The trigger execution id
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: childFilter
        in: query
        description: A execution child filter
        deprecated: true
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
      - name: newStatus
        in: query
        description: The new state of the executions
        required: true
        schema:
          $ref: "#/components/schemas/State.Type"
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: array
                  description: Filters
                  items:
                    $ref: "#/components/schemas/QueryFilter"
        required: true
      responses:
        "200":
          description: On success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
        "422":
          description: Changed state with errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
  /api/v1/{tenant}/executions/flows/{namespace}/{flowId}:
    get:
      tags:
      - Executions
      summary: Get flow information's for an execution
      operationId: getFlowFromExecution
      parameters:
      - name: namespace
        in: path
        description: The namespace of the flow
        required: true
        schema:
          type: string
      - name: flowId
        in: path
        description: The flow id
        required: true
        schema:
          type: string
      - name: revision
        in: query
        description: The flow revision
        schema:
          type: integer
          format: int32
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getFlowFromExecution 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowForExecution"
  /api/v1/{tenant}/executions/force-run/by-ids:
    post:
      tags:
      - Executions
      summary: Force run a list of executions
      operationId: forceRunByIds
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The list of executions id
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: On success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
        "422":
          description: Force run with errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
  /api/v1/{tenant}/executions/force-run/by-query:
    post:
      tags:
      - Executions
      summary: Force run executions filter by query parameters
      operationId: forceRunExecutionsByQuery
      parameters:
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: scope
        in: query
        description: The scope of the executions to include
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/FlowScope"
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: flowId
        in: query
        description: A flow id filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: startDate
        in: query
        description: The start datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: endDate
        in: query
        description: The end datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: timeRange
        in: query
        description: A time range filter relative to the current time
        deprecated: true
        schema:
          type: string
          nullable: true
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
      - name: state
        in: query
        description: A state filter
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/State.Type"
      - name: labels
        in: query
        description: A labels filter as a list of 'key:value'
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: triggerExecutionId
        in: query
        description: The trigger execution id
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: childFilter
        in: query
        description: A execution child filter
        deprecated: true
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: array
                  description: Filters
                  items:
                    $ref: "#/components/schemas/QueryFilter"
        required: true
      responses:
        "200":
          description: forceRunExecutionsByQuery 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/executions/kill/by-ids:
    delete:
      tags:
      - Executions
      summary: Kill a list of executions
      operationId: killExecutionsByIds
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The list of executions id
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: On success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
        "422":
          description: Killed with errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
  /api/v1/{tenant}/executions/kill/by-query:
    delete:
      tags:
      - Executions
      summary: Kill executions filter by query parameters
      operationId: killExecutionsByQuery
      parameters:
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: scope
        in: query
        description: The scope of the executions to include
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/FlowScope"
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: flowId
        in: query
        description: A flow id filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: startDate
        in: query
        description: The start datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: endDate
        in: query
        description: The end datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: timeRange
        in: query
        description: A time range filter relative to the current time
        deprecated: true
        schema:
          type: string
          nullable: true
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
      - name: state
        in: query
        description: A state filter
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/State.Type"
      - name: labels
        in: query
        description: A labels filter as a list of 'key:value'
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: triggerExecutionId
        in: query
        description: The trigger execution id
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: childFilter
        in: query
        description: A execution child filter
        deprecated: true
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: array
                  description: Filters
                  items:
                    $ref: "#/components/schemas/QueryFilter"
        required: true
      responses:
        "200":
          description: killExecutionsByQuery 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/executions/labels/by-ids:
    post:
      tags:
      - Executions
      summary: Set labels on a list of executions
      operationId: setLabelsOnTerminatedExecutionsByIds
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The request containing a list of labels and a list of executions
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecutionController.SetLabelsByIdsRequest"
        required: true
      responses:
        "200":
          description: On success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
        "422":
          description: Killed with errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
  /api/v1/{tenant}/executions/labels/by-query:
    post:
      tags:
      - Executions
      summary: Set label on executions filter by query parameters
      operationId: setLabelsOnTerminatedExecutionsByQuery
      parameters:
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: scope
        in: query
        description: The scope of the executions to include
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/FlowScope"
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: flowId
        in: query
        description: A flow id filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: startDate
        in: query
        description: The start datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: endDate
        in: query
        description: The end datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: timeRange
        in: query
        description: A time range filter relative to the current time
        deprecated: true
        schema:
          type: string
          nullable: true
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
      - name: state
        in: query
        description: A state filter
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/State.Type"
      - name: labels
        in: query
        description: A labels filter as a list of 'key:value'
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: triggerExecutionId
        in: query
        description: The trigger execution id
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: childFilter
        in: query
        description: A execution child filter
        deprecated: true
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The labels to add to the execution
        content:
          application/json:
            schema:
              type: array
              properties:
                filters:
                  type: array
                  description: Filters
                  items:
                    $ref: "#/components/schemas/QueryFilter"
              items:
                $ref: "#/components/schemas/Label"
        required: true
      responses:
        "200":
          description: setLabelsOnTerminatedExecutionsByQuery 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/executions/namespaces:
    get:
      tags:
      - Executions
      summary: Get all namespaces that have executable flows
      operationId: listExecutableDistinctNamespaces
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: listExecutableDistinctNamespaces 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/v1/{tenant}/executions/namespaces/{namespace}/flows:
    get:
      tags:
      - Executions
      summary: Get all flow ids for a namespace. Data returned are FlowForExecution
        containing minimal information about a Flow for when you are allowed to executing
        but not reading.
      operationId: listFlowExecutionsByNamespace
      parameters:
      - name: namespace
        in: path
        description: The namespace
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: listFlowExecutionsByNamespace 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FlowForExecution"
  /api/v1/{tenant}/executions/pause/by-ids:
    post:
      tags:
      - Executions
      summary: Pause a list of running executions
      operationId: pauseExecutionsByIds
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The list of executions id
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: On success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
        "422":
          description: Paused with errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
  /api/v1/{tenant}/executions/pause/by-query:
    post:
      tags:
      - Executions
      summary: Pause executions filter by query parameters
      operationId: pauseExecutionsByQuery
      parameters:
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: scope
        in: query
        description: The scope of the executions to include
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/FlowScope"
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: flowId
        in: query
        description: A flow id filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: startDate
        in: query
        description: The start datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: endDate
        in: query
        description: The end datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: timeRange
        in: query
        description: A time range filter relative to the current time
        deprecated: true
        schema:
          type: string
          nullable: true
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
      - name: state
        in: query
        description: A state filter
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/State.Type"
      - name: labels
        in: query
        description: A labels filter as a list of 'key:value'
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: triggerExecutionId
        in: query
        description: The trigger execution id
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: childFilter
        in: query
        description: A execution child filter
        deprecated: true
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: array
                  description: Filters
                  items:
                    $ref: "#/components/schemas/QueryFilter"
        required: true
      responses:
        "200":
          description: pauseExecutionsByQuery 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/executions/replay/by-ids:
    post:
      tags:
      - Executions
      summary: Create new executions from old ones. Keep the flow revision
      operationId: replayExecutionsByIds
      parameters:
      - name: latestRevision
        in: query
        description: If latest revision should be used
        schema:
          type: boolean
          nullable: true
          default: false
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The list of executions id
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: On success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
        "422":
          description: Replayed with errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
  /api/v1/{tenant}/executions/replay/by-query:
    post:
      tags:
      - Executions
      summary: Create new executions from old ones filter by query parameters. Keep
        the flow revision
      operationId: replayExecutionsByQuery
      parameters:
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: scope
        in: query
        description: The scope of the executions to include
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/FlowScope"
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: flowId
        in: query
        description: A flow id filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: startDate
        in: query
        description: The start datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: endDate
        in: query
        description: The end datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: timeRange
        in: query
        description: A time range filter relative to the current time
        deprecated: true
        schema:
          type: string
          nullable: true
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
      - name: state
        in: query
        description: A state filter
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/State.Type"
      - name: labels
        in: query
        description: A labels filter as a list of 'key:value'
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: triggerExecutionId
        in: query
        description: The trigger execution id
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: childFilter
        in: query
        description: A execution child filter
        deprecated: true
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
      - name: latestRevision
        in: query
        description: If latest revision should be used
        schema:
          type: boolean
          nullable: true
          default: false
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: array
                  description: Filters
                  items:
                    $ref: "#/components/schemas/QueryFilter"
        required: true
      responses:
        "200":
          description: replayExecutionsByQuery 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/executions/restart/by-ids:
    post:
      tags:
      - Executions
      summary: Restart a list of executions
      operationId: restartExecutionsByIds
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The list of executions id
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: On success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
        "422":
          description: Restarted with errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
  /api/v1/{tenant}/executions/restart/by-query:
    post:
      tags:
      - Executions
      summary: Restart executions filter by query parameters
      operationId: restartExecutionsByQuery
      parameters:
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: scope
        in: query
        description: The scope of the executions to include
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/FlowScope"
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: flowId
        in: query
        description: A flow id filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: startDate
        in: query
        description: The start datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: endDate
        in: query
        description: The end datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: timeRange
        in: query
        description: A time range filter relative to the current time
        deprecated: true
        schema:
          type: string
          nullable: true
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
      - name: state
        in: query
        description: A state filter
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/State.Type"
      - name: labels
        in: query
        description: A labels filter as a list of 'key:value'
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: triggerExecutionId
        in: query
        description: The trigger execution id
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: childFilter
        in: query
        description: A execution child filter
        deprecated: true
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: array
                  description: Filters
                  items:
                    $ref: "#/components/schemas/QueryFilter"
        required: true
      responses:
        "200":
          description: restartExecutionsByQuery 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/executions/resume/by-ids:
    post:
      tags:
      - Executions
      summary: Resume a list of paused executions
      operationId: resumeExecutionsByIds
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The list of executions id
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: On success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
        "422":
          description: Resumed with errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
  /api/v1/{tenant}/executions/resume/by-query:
    post:
      tags:
      - Executions
      summary: Resume executions filter by query parameters
      operationId: resumeExecutionsByQuery
      parameters:
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: scope
        in: query
        description: The scope of the executions to include
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/FlowScope"
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: flowId
        in: query
        description: A flow id filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: startDate
        in: query
        description: The start datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: endDate
        in: query
        description: The end datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: timeRange
        in: query
        description: A time range filter relative to the current time
        deprecated: true
        schema:
          type: string
          nullable: true
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
      - name: state
        in: query
        description: A state filter
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/State.Type"
      - name: labels
        in: query
        description: A labels filter as a list of 'key:value'
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: triggerExecutionId
        in: query
        description: The trigger execution id
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: childFilter
        in: query
        description: A execution child filter
        deprecated: true
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: array
                  description: Filters
                  items:
                    $ref: "#/components/schemas/QueryFilter"
        required: true
      responses:
        "200":
          description: resumeExecutionsByQuery 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/executions/search:
    get:
      tags:
      - Executions
      summary: Search for executions
      operationId: searchExecutions
      parameters:
      - name: page
        in: query
        description: The current page
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        description: The current page size
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 10
      - name: sort
        in: query
        description: The sort of current page
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: filters
        in: query
        description: Filters
        required: true
        schema:
          type: array
          items:
            $ref: "#/components/schemas/QueryFilter"
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: scope
        in: query
        description: The scope of the executions to include
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/FlowScope"
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: flowId
        in: query
        description: A flow id filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: startDate
        in: query
        description: The start datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: endDate
        in: query
        description: The end datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: timeRange
        in: query
        description: A time range filter relative to the current time
        deprecated: true
        schema:
          type: string
          nullable: true
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
      - name: state
        in: query
        description: A state filter
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/State.Type"
      - name: labels
        in: query
        description: A labels filter as a list of 'key:value'
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: triggerExecutionId
        in: query
        description: The trigger execution id
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: childFilter
        in: query
        description: A execution child filter
        deprecated: true
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: searchExecutions 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_Execution_"
  /api/v1/{tenant}/executions/trigger/{namespace}/{id}:
    post:
      tags:
      - Executions
      summary: Trigger a new execution for a flow
      operationId: triggerExecution
      parameters:
      - name: namespace
        in: path
        description: The flow namespace
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The flow id
        required: true
        schema:
          type: string
          nullable: true
      - name: labels
        in: query
        description: The labels as a list of 'key:value'
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: wait
        in: query
        description: If the server will wait the end of the execution
        required: true
        schema:
          type: boolean
          default: false
      - name: revision
        in: query
        description: The flow revision or latest if null
        schema:
          type: integer
          format: int32
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The inputs
        content:
          multipart/form-data:
            schema:
              type: array
              items:
                type: string
                format: binary
      responses:
        "409":
          description: if the flow is disabled
        "200":
          description: triggerExecution 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExecutionController.ExecutionResponse"
      deprecated: true
  /api/v1/{tenant}/executions/unqueue/by-ids:
    post:
      tags:
      - Executions
      summary: Unqueue a list of executions
      operationId: unqueueExecutionsByIds
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The list of executions id
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: On success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
        "422":
          description: Unqueued with errors
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkErrorResponse"
  /api/v1/{tenant}/executions/unqueue/by-query:
    post:
      tags:
      - Executions
      summary: Unqueue executions filter by query parameters
      operationId: unqueueExecutionsByQuery
      parameters:
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: scope
        in: query
        description: The scope of the executions to include
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/FlowScope"
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: flowId
        in: query
        description: A flow id filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: startDate
        in: query
        description: The start datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: endDate
        in: query
        description: The end datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: timeRange
        in: query
        description: A time range filter relative to the current time
        deprecated: true
        schema:
          type: string
          nullable: true
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
      - name: state
        in: query
        description: A state filter
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/State.Type"
      - name: labels
        in: query
        description: A labels filter as a list of 'key:value'
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: triggerExecutionId
        in: query
        description: The trigger execution id
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: childFilter
        in: query
        description: A execution child filter
        deprecated: true
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: array
                  description: Filters
                  items:
                    $ref: "#/components/schemas/QueryFilter"
        required: true
      responses:
        "200":
          description: unqueueExecutionsByQuery 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/executions/webhook/{namespace}/{id}/{key}:
    get:
      tags:
      - Executions
      summary: Trigger a new execution by GET webhook trigger
      operationId: triggerExecutionByGetWebhook
      parameters:
      - name: namespace
        in: path
        description: The flow namespace
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The flow id
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: The webhook trigger uid
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: triggerExecutionByGetWebhook 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
    put:
      tags:
      - Executions
      summary: Trigger a new execution by PUT webhook trigger
      operationId: triggerExecutionByPutWebhook
      parameters:
      - name: namespace
        in: path
        description: The flow namespace
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The flow id
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: The webhook trigger uid
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: triggerExecutionByPutWebhook 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
    post:
      tags:
      - Executions
      summary: Trigger a new execution by POST webhook trigger
      operationId: triggerExecutionByPostWebhook
      parameters:
      - name: namespace
        in: path
        description: The flow namespace
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The flow id
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: The webhook trigger uid
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: triggerExecutionByPostWebhook 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
  /api/v1/{tenant}/executions/{executionId}:
    get:
      tags:
      - Executions
      summary: Get an execution
      operationId: getExecution
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getExecution 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
    delete:
      tags:
      - Executions
      summary: Delete an execution
      operationId: deleteExecution
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: deleteLogs
        in: query
        description: Whether to delete execution logs
        required: true
        schema:
          type: boolean
          default: true
      - name: deleteMetrics
        in: query
        description: Whether to delete execution metrics
        required: true
        schema:
          type: boolean
          default: true
      - name: deleteStorage
        in: query
        description: Whether to delete execution files in the internal storage
        required: true
        schema:
          type: boolean
          default: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: On success
  /api/v1/{tenant}/executions/{executionId}/change-status:
    post:
      tags:
      - Executions
      summary: Change the state of an execution
      operationId: updateExecutionStatus
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: status
        in: query
        description: The new state of the execution
        required: true
        schema:
          $ref: "#/components/schemas/State.Type"
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: updateExecutionStatus 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
  /api/v1/{tenant}/executions/{executionId}/eval/{taskRunId}:
    post:
      tags:
      - Executions
      summary: Evaluate a variable expression for this taskrun
      operationId: evalTaskRunExpression
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: taskRunId
        in: path
        description: The taskrun id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The Pebble expression that should be evaluated
        content:
          text/plain:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: evalTaskRunExpression 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionController.EvalResult"
  /api/v1/{tenant}/executions/{executionId}/file:
    get:
      tags:
      - Executions
      summary: Download file for an execution
      operationId: downloadFileFromExecution
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: path
        in: query
        description: The internal storage uri
        required: true
        schema:
          type: string
          format: uri
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: downloadFileFromExecution 200 response
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
  /api/v1/{tenant}/executions/{executionId}/file/metas:
    get:
      tags:
      - Executions
      summary: Get file meta information for an execution
      operationId: getFileMetadatasFromExecution
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: path
        in: query
        description: The internal storage uri
        required: true
        schema:
          type: string
          format: uri
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getFileMetadatasFromExecution 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileMetas"
  /api/v1/{tenant}/executions/{executionId}/file/preview:
    get:
      tags:
      - Executions
      summary: Get file preview for an execution
      operationId: previewFileFromExecution
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: path
        in: query
        description: The internal storage uri
        required: true
        schema:
          type: string
          format: uri
      - name: maxRows
        in: query
        description: The max row returns
        schema:
          type: integer
          format: int32
          nullable: true
      - name: encoding
        in: query
        description: The file encoding as Java charset name. Defaults to UTF-8
        required: true
        schema:
          type: string
          default: UTF-8
        example: ISO-8859-1
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: previewFileFromExecution 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/executions/{executionId}/flow:
    get:
      tags:
      - Executions
      summary: Get flow information's for an execution
      operationId: getFlowFromExecutionById
      parameters:
      - name: executionId
        in: path
        description: The execution that you want flow information's
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getFlowFromExecutionById 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowForExecution"
  /api/v1/{tenant}/executions/{executionId}/follow:
    get:
      tags:
      - Executions
      summary: Follow an execution
      operationId: followExecution
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: followExecution 200 response
          content:
            text/event-stream:
              schema:
                $ref: "#/components/schemas/Event_Execution_"
  /api/v1/{tenant}/executions/{executionId}/force-run:
    post:
      tags:
      - Executions
      summary: Force run an execution
      operationId: forceRunExecution
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: forceRunExecution 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
  /api/v1/{tenant}/executions/{executionId}/graph:
    get:
      tags:
      - Executions
      summary: Generate a graph for an execution
      operationId: getExecutionFlowGraph
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: subflows
        in: query
        description: The subflow tasks to display
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getExecutionFlowGraph 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowGraph"
  /api/v1/{tenant}/executions/{executionId}/kill:
    delete:
      tags:
      - Executions
      summary: Kill an execution
      operationId: killExecution
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: isOnKillCascade
        in: query
        description: Specifies whether killing the execution also kill all subflow
          executions.
        required: true
        schema:
          type: boolean
          default: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "202":
          description: Execution kill was requested successfully
        "409":
          description: if the executions is already finished
        "404":
          description: if the executions is not found
  /api/v1/{tenant}/executions/{executionId}/labels:
    post:
      tags:
      - Executions
      summary: Add or update labels of a terminated execution
      operationId: setLabelsOnTerminatedExecution
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The labels to add to the execution
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Label"
        required: true
      responses:
        "404":
          description: If the execution cannot be found
        "400":
          description: If the execution is not terminated
        "200":
          description: setLabelsOnTerminatedExecution 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/executions/{executionId}/pause:
    post:
      tags:
      - Executions
      summary: Pause a running execution.
      operationId: pauseExecution
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: On success
        "409":
          description: if the executions is not running
  /api/v1/{tenant}/executions/{executionId}/replay:
    post:
      tags:
      - Executions
      summary: Create a new execution from an old one and start it from a specified
        task run id
      operationId: replayExecution
      parameters:
      - name: executionId
        in: path
        description: the original execution id to clone
        required: true
        schema:
          type: string
      - name: taskRunId
        in: query
        description: The taskrun id
        schema:
          type: string
          nullable: true
      - name: revision
        in: query
        description: The flow revision to use for new execution
        schema:
          type: integer
          format: int32
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: replayExecution 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
  /api/v1/{tenant}/executions/{executionId}/restart:
    post:
      tags:
      - Executions
      summary: Restart a new execution from an old one
      operationId: restartExecution
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: revision
        in: query
        description: The flow revision to use for new execution
        schema:
          type: integer
          format: int32
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: restartExecution 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
  /api/v1/{tenant}/executions/{executionId}/resume:
    post:
      tags:
      - Executions
      summary: Resume a paused execution.
      operationId: resumeExecution
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The inputs
        content:
          multipart/form-data:
            schema:
              type: array
              items:
                type: string
                format: binary
      responses:
        "204":
          description: On success
        "409":
          description: if the executions is not paused
  /api/v1/{tenant}/executions/{executionId}/resume/validate:
    post:
      tags:
      - Executions
      summary: Validate inputs to resume a paused execution.
      operationId: validateResumeExecutionInputs
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The inputs
        content:
          multipart/form-data:
            schema:
              type: array
              items:
                type: string
                format: binary
      responses:
        "204":
          description: On success
        "409":
          description: if the executions is not paused
  /api/v1/{tenant}/executions/{executionId}/state:
    post:
      tags:
      - Executions
      summary: Change state for a taskrun in an execution
      operationId: updateTaskRunState
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: the taskRun id and state to apply
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecutionController.StateRequest"
        required: true
      responses:
        "200":
          description: updateTaskRunState 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
  /api/v1/{tenant}/executions/{executionId}/unqueue:
    post:
      tags:
      - Executions
      summary: Unqueue an execution
      operationId: unqueueExecution
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: unqueueExecution 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
  /api/v1/{tenant}/executions/{namespace}/{id}:
    post:
      tags:
      - Executions
      summary: Create a new execution for a flow
      operationId: createExecution
      parameters:
      - name: namespace
        in: path
        description: The flow namespace
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The flow id
        required: true
        schema:
          type: string
      - name: labels
        in: query
        description: The labels as a list of 'key:value'
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: wait
        in: query
        description: If the server will wait the end of the execution
        required: true
        schema:
          type: boolean
          default: false
      - name: revision
        in: query
        description: The flow revision or latest if null
        schema:
          type: integer
          format: int32
          nullable: true
      - name: scheduleDate
        in: query
        description: Schedule the flow on a specific date
        schema:
          type: string
          format: date-time
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The inputs
        content:
          multipart/form-data:
            schema:
              type: array
              items:
                type: string
                format: binary
      responses:
        "409":
          description: if the flow is disabled
        "200":
          description: createExecution 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExecutionController.ExecutionResponse"
  /api/v1/{tenant}/executions/{namespace}/{id}/validate:
    post:
      tags:
      - Executions
      summary: Validate the creation of a new execution for a flow
      operationId: validateNewExecutionInputs
      parameters:
      - name: namespace
        in: path
        description: The flow namespace
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The flow id
        required: true
        schema:
          type: string
      - name: labels
        in: query
        description: The labels as a list of 'key:value'
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: revision
        in: query
        description: The flow revision or latest if null
        schema:
          type: integer
          format: int32
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The inputs
        content:
          multipart/form-data:
            schema:
              type: array
              items:
                type: string
                format: binary
      responses:
        "409":
          description: if the flow is disabled
        "200":
          description: validateNewExecutionInputs 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ExecutionController.ApiValidateExecutionInputsResponse"
  /api/v1/{tenant}/flows:
    post:
      tags:
      - Flows
      summary: Create a flow from yaml source
      operationId: createFlow
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The flow source code
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: createFlow 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowWithSource"
  /api/v1/{tenant}/flows/bulk:
    post:
      tags:
      - Flows
      summary: Update from multiples yaml sources
      description: |-
        All flow will be created / updated for this namespace.
        Flow that already created but not in `flows` will be deleted if the query delete is `true`
      operationId: bulkUpdateFlows
      parameters:
      - name: delete
        in: query
        description: If missing flow should be deleted
        required: true
        schema:
          type: boolean
          default: true
      - name: namespace
        in: query
        description: The namespace where to update flows
        schema:
          type: string
          nullable: true
      - name: allowNamespaceChild
        in: query
        description: If namespace child should are allowed to be updated
        required: true
        schema:
          type: boolean
          default: false
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: A list of flows source code splitted with "---"
        content:
          application/x-yaml:
            schema:
              type: string
              nullable: true
      responses:
        "200":
          description: bulkUpdateFlows 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FlowInterface"
  /api/v1/{tenant}/flows/delete/by-ids:
    delete:
      tags:
      - Flows
      summary: Delete flows by their IDs.
      operationId: deleteFlowsByIds
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: A list of tuple flow ID and namespace as flow identifiers
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/IdWithNamespace"
        required: true
      responses:
        "200":
          description: deleteFlowsByIds 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
  /api/v1/{tenant}/flows/delete/by-query:
    delete:
      tags:
      - Flows
      summary: Delete flows returned by the query parameters.
      operationId: deleteFlowsByQuery
      parameters:
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: scope
        in: query
        description: The scope of the flows to include
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/FlowScope"
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: labels
        in: query
        description: A labels filter as a list of 'key:value'
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: array
                  description: Filters
                  items:
                    $ref: "#/components/schemas/QueryFilter"
        required: true
      responses:
        "200":
          description: deleteFlowsByQuery 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
  /api/v1/{tenant}/flows/disable/by-ids:
    post:
      tags:
      - Flows
      summary: Disable flows by their IDs.
      operationId: disableFlowsByIds
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: A list of tuple flow ID and namespace as flow identifiers
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/IdWithNamespace"
        required: true
      responses:
        "200":
          description: disableFlowsByIds 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
  /api/v1/{tenant}/flows/disable/by-query:
    post:
      tags:
      - Flows
      summary: Disable flows returned by the query parameters.
      operationId: disableFlowsByQuery
      parameters:
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: scope
        in: query
        description: The scope of the flows to include
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/FlowScope"
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: labels
        in: query
        description: A labels filter as a list of 'key:value'
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: array
                  description: Filters
                  items:
                    $ref: "#/components/schemas/QueryFilter"
        required: true
      responses:
        "200":
          description: disableFlowsByQuery 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
  /api/v1/{tenant}/flows/distinct-namespaces:
    get:
      tags:
      - Flows
      summary: List all distinct namespaces
      operationId: listDistinctNamespaces
      parameters:
      - name: q
        in: query
        description: A string filter
        schema:
          type: string
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: listDistinctNamespaces 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/v1/{tenant}/flows/enable/by-ids:
    post:
      tags:
      - Flows
      summary: Enable flows by their IDs.
      operationId: enableFlowsByIds
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: A list of tuple flow ID and namespace as flow identifiers
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/IdWithNamespace"
        required: true
      responses:
        "200":
          description: enableFlowsByIds 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
  /api/v1/{tenant}/flows/enable/by-query:
    post:
      tags:
      - Flows
      summary: Enable flows returned by the query parameters.
      operationId: enableFlowsByQuery
      parameters:
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: scope
        in: query
        description: The scope of the flows to include
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/FlowScope"
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: labels
        in: query
        description: A labels filter as a list of 'key:value'
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: array
                  description: Filters
                  items:
                    $ref: "#/components/schemas/QueryFilter"
        required: true
      responses:
        "200":
          description: enableFlowsByQuery 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkResponse"
  /api/v1/{tenant}/flows/export/by-ids:
    post:
      tags:
      - Flows
      summary: Export flows as a ZIP archive of yaml sources.
      operationId: exportFlowsByIds
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: A list of tuple flow ID and namespace as flow identifiers
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/IdWithNamespace"
        required: true
      responses:
        "200":
          description: exportFlowsByIds 200 response
          content:
            application/octet-stream:
              schema:
                type: array
                items:
                  type: string
                  format: byte
  /api/v1/{tenant}/flows/export/by-query:
    get:
      tags:
      - Flows
      summary: Export flows as a ZIP archive of yaml sources.
      operationId: exportFlowsByQuery
      parameters:
      - name: filters
        in: query
        description: Filters
        required: true
        schema:
          type: array
          items:
            $ref: "#/components/schemas/QueryFilter"
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: scope
        in: query
        description: The scope of the flows to include
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/FlowScope"
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: labels
        in: query
        description: A labels filter as a list of 'key:value'
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: exportFlowsByQuery 200 response
          content:
            application/octet-stream:
              schema:
                type: array
                items:
                  type: string
                  format: byte
  /api/v1/{tenant}/flows/graph:
    post:
      tags:
      - Flows
      summary: Generate a graph for a flow source
      operationId: generateFlowGraphFromSource
      parameters:
      - name: subflows
        in: query
        description: The subflow tasks to display
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The flow source code
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: generateFlowGraphFromSource 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowGraph"
  /api/v1/{tenant}/flows/import:
    post:
      tags:
      - Flows
      summary: |2
            Import flows as a ZIP archive of yaml sources or a multi-objects YAML file.
            When sending a Yaml that contains one or more flows, a list of index is returned.
            When sending a ZIP archive, a list of files that couldn't be imported is returned.
      operationId: importFlows
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileUpload:
                  type: string
                  description: "The file to import, can be a ZIP archive or a multi-objects\
                    \ YAML file"
                  format: binary
            encoding:
              fileUpload:
                contentType: application/octet-stream
        required: true
      responses:
        "200":
          description: On success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/v1/{tenant}/flows/search:
    get:
      tags:
      - Flows
      summary: Search for flows
      operationId: searchFlows
      parameters:
      - name: page
        in: query
        description: The current page
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        description: The current page size
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 10
      - name: sort
        in: query
        description: The sort of current page
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: filters
        in: query
        description: Filters
        required: true
        schema:
          type: array
          items:
            $ref: "#/components/schemas/QueryFilter"
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: scope
        in: query
        description: The scope of the flows to include
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/FlowScope"
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: labels
        in: query
        description: A labels filter as a list of 'key:value'
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: searchFlows 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_Flow_"
  /api/v1/{tenant}/flows/source:
    get:
      tags:
      - Flows
      summary: Search for flows source code
      operationId: searchFlowsBySourceCode
      parameters:
      - name: page
        in: query
        description: The current page
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        description: The current page size
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 10
      - name: sort
        in: query
        description: The sort of current page
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: q
        in: query
        description: A string filter
        schema:
          type: string
          nullable: true
      - name: namespace
        in: query
        description: A namespace filter prefix
        schema:
          type: string
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: searchFlowsBySourceCode 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_SearchResult_Flow__"
  /api/v1/{tenant}/flows/validate:
    post:
      tags:
      - Flows
      summary: Validate a list of flows
      operationId: validateFlows
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: A list of flows source code in a single string
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: validateFlows 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ValidateConstraintViolation"
  /api/v1/{tenant}/flows/validate/task:
    post:
      tags:
      - Flows
      summary: Validate a task
      operationId: validateTask
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      - name: section
        in: query
        description: The type of task
        required: true
        schema:
          $ref: "#/components/schemas/FlowController.TaskValidationType"
      requestBody:
        description: A task definition that can be from tasks or triggers
        content:
          application/x-yaml:
            schema:
              type: string
          application/json:
            schema:
              type: string
            example: null
        required: true
      responses:
        "200":
          description: validateTask 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateConstraintViolation"
  /api/v1/{tenant}/flows/validate/trigger:
    post:
      tags:
      - Flows
      summary: Validate trigger
      operationId: validateTrigger
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The trigger
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: validateTrigger 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidateConstraintViolation"
  /api/v1/{tenant}/flows/{namespace}:
    get:
      tags:
      - Flows
      summary: Retrieve all flows from a given namespace
      operationId: listFlowsByNamespace
      parameters:
      - name: namespace
        in: path
        description: Namespace to filter flows
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: listFlowsByNamespace 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Flow"
    post:
      tags:
      - Flows
      summary: Update a complete namespace from yaml source
      description: |-
        All flow will be created / updated for this namespace.
        Flow that already created but not in `flows` will be deleted if the query delete is `true`
      operationId: updateFlowsInNamespace
      parameters:
      - name: namespace
        in: path
        description: The flow namespace
        required: true
        schema:
          type: string
      - name: delete
        in: query
        description: If missing flow should be deleted
        required: true
        schema:
          type: boolean
          default: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: A list of flows source code
        content:
          application/x-yaml:
            schema:
              type: string
              nullable: true
      responses:
        "200":
          description: updateFlowsInNamespace 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FlowInterface"
  /api/v1/{tenant}/flows/{namespace}/{id}:
    get:
      tags:
      - Flows
      summary: Get a flow
      operationId: getFlow
      parameters:
      - name: namespace
        in: path
        description: The flow namespace
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The flow id
        required: true
        schema:
          type: string
      - name: source
        in: query
        description: Include the source code
        required: true
        schema:
          type: boolean
          default: false
      - name: revision
        in: query
        description: Get latest revision by default
        schema:
          type: integer
          format: int32
          nullable: true
      - name: allowDeleted
        in: query
        description: Get flow even if deleted
        required: true
        schema:
          type: boolean
          default: false
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getFlow 200 response
          content:
            application/json:
              schema:
                type: object
    put:
      tags:
      - Flows
      summary: Update a flow
      operationId: updateFlow
      parameters:
      - name: namespace
        in: path
        description: The flow namespace
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The flow id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The flow source code
        content:
          application/x-yaml:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: updateFlow 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowWithSource"
    delete:
      tags:
      - Flows
      summary: Delete a flow
      operationId: deleteFlow
      parameters:
      - name: namespace
        in: path
        description: The flow namespace
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The flow id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "204":
          description: On success
  /api/v1/{tenant}/flows/{namespace}/{id}/dependencies:
    get:
      tags:
      - Flows
      summary: Get flow dependencies
      operationId: getFlowDependencies
      parameters:
      - name: namespace
        in: path
        description: The flow namespace
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The flow id
        required: true
        schema:
          type: string
      - name: destinationOnly
        in: query
        description: "If true, list only destination dependencies, otherwise list\
          \ also source dependencies"
        required: true
        schema:
          type: boolean
          default: false
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getFlowDependencies 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowTopologyGraph"
  /api/v1/{tenant}/flows/{namespace}/{id}/graph:
    get:
      tags:
      - Flows
      summary: Generate a graph for a flow
      operationId: generateFlowGraph
      parameters:
      - name: namespace
        in: path
        description: The flow namespace
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The flow id
        required: true
        schema:
          type: string
      - name: revision
        in: query
        description: The flow revision
        schema:
          type: integer
          format: int32
          nullable: true
      - name: subflows
        in: query
        description: The subflow tasks to display
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Return a FlowGraph object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowGraph"
  /api/v1/{tenant}/flows/{namespace}/{id}/revisions:
    get:
      tags:
      - Flows
      summary: Get revisions for a flow
      operationId: listFlowRevisions
      parameters:
      - name: namespace
        in: path
        description: The flow namespace
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The flow id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: listFlowRevisions 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FlowWithSource"
  /api/v1/{tenant}/flows/{namespace}/{id}/tasks/{taskId}:
    get:
      tags:
      - Flows
      summary: Get a flow task
      operationId: getTaskFromFlow
      parameters:
      - name: namespace
        in: path
        description: The flow namespace
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The flow id
        required: true
        schema:
          type: string
      - name: taskId
        in: path
        description: The task id
        required: true
        schema:
          type: string
      - name: revision
        in: query
        description: The flow revision
        schema:
          type: integer
          format: int32
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getTaskFromFlow 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
  /api/v1/{tenant}/flows/{namespace}/{id}/{taskId}:
    patch:
      tags:
      - Flows
      summary: Update a single task on a flow
      operationId: updateTask
      parameters:
      - name: namespace
        in: path
        description: The flow namespace
        required: true
        schema:
          type: string
      - name: id
        in: path
        description: The flow id
        required: true
        schema:
          type: string
      - name: taskId
        in: path
        description: The task id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The task
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
        required: true
      responses:
        "200":
          description: updateTask 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Flow"
      deprecated: true
      x-deprecated-message: should not be used anymore
  /api/v1/{tenant}/logs/search:
    get:
      tags:
      - Logs
      summary: Search for logs
      operationId: searchLogs
      parameters:
      - name: page
        in: query
        description: The current page
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        description: The current page size
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 10
      - name: sort
        in: query
        description: The sort of current page
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: filters
        in: query
        description: Filters
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/QueryFilter"
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: flowId
        in: query
        description: A flow id filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: triggerId
        in: query
        description: A trigger id filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: minLevel
        in: query
        description: The min log level filter
        deprecated: true
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/Level"
      - name: startDate
        in: query
        description: The start datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: endDate
        in: query
        description: The end datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: searchLogs 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_LogEntry_"
  /api/v1/{tenant}/logs/{executionId}:
    get:
      tags:
      - Logs
      summary: "Get logs for a specific execution, taskrun or task"
      operationId: listLogsFromExecution
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: minLevel
        in: query
        description: The min log level filter
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/Level"
      - name: taskRunId
        in: query
        description: The taskrun id
        schema:
          type: string
          nullable: true
      - name: taskId
        in: query
        description: The task id
        schema:
          type: string
          nullable: true
      - name: attempt
        in: query
        description: The attempt number
        schema:
          type: integer
          format: int32
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: listLogsFromExecution 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LogEntry"
    delete:
      tags:
      - Logs
      summary: "Delete logs for a specific execution, taskrun or task"
      operationId: deleteLogsFromExecution
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: minLevel
        in: query
        description: The min log level filter
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/Level"
      - name: taskRunId
        in: query
        description: The taskrun id
        schema:
          type: string
          nullable: true
      - name: taskId
        in: query
        description: The task id
        schema:
          type: string
          nullable: true
      - name: attempt
        in: query
        description: The attempt number
        schema:
          type: integer
          format: int32
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: deleteLogsFromExecution 200 response
  /api/v1/{tenant}/logs/{executionId}/download:
    get:
      tags:
      - Logs
      summary: "Download logs for a specific execution, taskrun or task"
      operationId: downloadLogsFromExecution
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: minLevel
        in: query
        description: The min log level filter
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/Level"
      - name: taskRunId
        in: query
        description: The taskrun id
        schema:
          type: string
          nullable: true
      - name: taskId
        in: query
        description: The task id
        schema:
          type: string
          nullable: true
      - name: attempt
        in: query
        description: The attempt number
        schema:
          type: integer
          format: int32
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: downloadLogsFromExecution 200 response
          content:
            text/plain:
              schema:
                type: string
                format: binary
  /api/v1/{tenant}/logs/{executionId}/follow:
    get:
      tags:
      - Logs
      summary: Follow logs for a specific execution
      operationId: followLogsFromExecution
      parameters:
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: minLevel
        in: query
        description: The min log level filter
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/Level"
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: followLogsFromExecution 200 response
          content:
            text/event-stream:
              schema:
                $ref: "#/components/schemas/Event_LogEntry_"
  /api/v1/{tenant}/logs/{namespace}/{flowId}:
    delete:
      tags:
      - Logs
      summary: "Delete logs for a specific execution, taskrun or task"
      operationId: deleteLogsFromFlow
      parameters:
      - name: namespace
        in: path
        description: The namespace
        required: true
        schema:
          type: string
      - name: flowId
        in: path
        description: The flow identifier
        required: true
        schema:
          type: string
      - name: triggerId
        in: query
        description: The trigger id
        schema:
          type: string
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: deleteLogsFromFlow 200 response
  /api/v1/{tenant}/metrics/aggregates/{namespace}/{flowId}/{metric}:
    get:
      tags:
      - Metrics
      summary: Get metrics aggregations for a specific flow
      operationId: aggregateMetricsFromFlow
      parameters:
      - name: namespace
        in: path
        description: The namespace
        required: true
        schema:
          type: string
      - name: flowId
        in: path
        description: The flow Id
        required: true
        schema:
          type: string
      - name: metric
        in: path
        description: The metric name
        required: true
        schema:
          type: string
      - name: startDate
        in: query
        description: "The start datetime, default to now - 30 days"
        schema:
          type: string
          format: date-time
          nullable: true
      - name: endDate
        in: query
        description: "The end datetime, default to now"
        schema:
          type: string
          format: date-time
          nullable: true
      - name: aggregation
        in: query
        description: "The type of aggregation: avg, sum, min or max"
        required: true
        schema:
          type: string
          default: sum
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: aggregateMetricsFromFlow 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricAggregations"
  /api/v1/{tenant}/metrics/aggregates/{namespace}/{flowId}/{taskId}/{metric}:
    get:
      tags:
      - Metrics
      summary: Get metrics aggregations for a specific flow
      operationId: aggregateMetricsFromTask
      parameters:
      - name: namespace
        in: path
        description: The namespace
        required: true
        schema:
          type: string
      - name: flowId
        in: path
        description: The flow Id
        required: true
        schema:
          type: string
      - name: taskId
        in: path
        description: The task Id
        required: true
        schema:
          type: string
      - name: metric
        in: path
        description: The metric name
        required: true
        schema:
          type: string
      - name: startDate
        in: query
        description: "The start datetime, default to now - 30 days"
        schema:
          type: string
          format: date-time
          nullable: true
      - name: endDate
        in: query
        description: "The end datetime, default to now"
        schema:
          type: string
          format: date-time
          nullable: true
      - name: aggregation
        in: query
        description: "The type of aggregation: avg, sum, min or max"
        required: true
        schema:
          type: string
          default: sum
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: aggregateMetricsFromTask 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricAggregations"
  /api/v1/{tenant}/metrics/names/{namespace}/{flowId}:
    get:
      tags:
      - Metrics
      summary: Get metrics names for a specific flow
      operationId: listFlowMetrics
      parameters:
      - name: namespace
        in: path
        description: The namespace
        required: true
        schema:
          type: string
      - name: flowId
        in: path
        description: The flow Id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: listFlowMetrics 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/v1/{tenant}/metrics/names/{namespace}/{flowId}/{taskId}:
    get:
      tags:
      - Metrics
      summary: Get metrics names for a specific task in a flow
      operationId: listTaskMetrics
      parameters:
      - name: namespace
        in: path
        description: The namespace
        required: true
        schema:
          type: string
      - name: flowId
        in: path
        description: The flow Id
        required: true
        schema:
          type: string
      - name: taskId
        in: path
        description: The task Id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: listTaskMetrics 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/v1/{tenant}/metrics/tasks/{namespace}/{flowId}:
    get:
      tags:
      - Metrics
      summary: "Get tasks id that have metrics for a specific flow, include deleted\
        \ or renamed tasks"
      operationId: listTasksWithMetrics
      parameters:
      - name: namespace
        in: path
        description: The namespace
        required: true
        schema:
          type: string
      - name: flowId
        in: path
        description: The flow Id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: listTasksWithMetrics 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/v1/{tenant}/metrics/{executionId}:
    get:
      tags:
      - Metrics
      summary: Get metrics for a specific execution
      operationId: searchByExecution
      parameters:
      - name: page
        in: query
        description: The current page
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        description: The current page size
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 10
      - name: sort
        in: query
        description: The sort of current page
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: executionId
        in: path
        description: The execution id
        required: true
        schema:
          type: string
      - name: taskRunId
        in: query
        description: The taskrun id
        schema:
          type: string
          nullable: true
      - name: taskId
        in: query
        description: The task id
        schema:
          type: string
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: searchByExecution 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_MetricEntry_"
  /api/v1/{tenant}/namespaces/search:
    get:
      tags:
      - Namespaces
      summary: Search for namespaces
      operationId: searchNamespaces
      parameters:
      - name: q
        in: query
        description: A string filter
        schema:
          type: string
          nullable: true
      - name: page
        in: query
        description: The current page
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        description: The current page size
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 10
      - name: sort
        in: query
        description: The sort of current page
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: existing
        in: query
        description: Return only existing namespace
        schema:
          type: boolean
          nullable: true
          default: false
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: searchNamespaces 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_NamespaceWithDisabled_"
  /api/v1/{tenant}/namespaces/{id}:
    get:
      tags:
      - Namespaces
      summary: Get a namespace
      operationId: getNamespace
      parameters:
      - name: id
        in: path
        description: The namespace id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getNamespace 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NamespaceLight"
  /api/v1/{tenant}/namespaces/{namespace}/dependencies:
    get:
      tags:
      - Flows
      summary: Get flow dependencies
      operationId: getFlowDependenciesFromNamespace
      parameters:
      - name: namespace
        in: path
        description: The flow namespace
        required: true
        schema:
          type: string
      - name: destinationOnly
        in: query
        description: "if true, list only destination dependencies, otherwise list\
          \ also source dependencies"
        required: true
        schema:
          type: boolean
          default: false
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getFlowDependenciesFromNamespace 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FlowTopologyGraph"
  /api/v1/{tenant}/namespaces/{namespace}/files:
    get:
      tags:
      - Files
      summary: Get namespace file content
      operationId: getFileContent
      parameters:
      - name: namespace
        in: path
        description: The namespace id
        required: true
        schema:
          type: string
      - name: path
        in: query
        description: The internal storage uri
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getFileContent 200 response
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
    put:
      tags:
      - Files
      summary: Move a file or directory
      operationId: moveFileDirectory
      parameters:
      - name: namespace
        in: path
        description: The namespace id
        required: true
        schema:
          type: string
      - name: from
        in: query
        description: The internal storage uri to move from
        required: true
        schema:
          type: string
          format: uri
      - name: to
        in: query
        description: The internal storage uri to move to
        required: true
        schema:
          type: string
          format: uri
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: moveFileDirectory 200 response
    post:
      tags:
      - Files
      summary: Create a file
      operationId: createNamespaceFile
      parameters:
      - name: namespace
        in: path
        description: The namespace id
        required: true
        schema:
          type: string
      - name: path
        in: query
        description: The internal storage uri
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileContent:
                  type: string
                  description: The file to upload
                  format: binary
            encoding:
              fileContent:
                contentType: application/octet-stream
        required: true
      responses:
        "200":
          description: createNamespaceFile 200 response
    delete:
      tags:
      - Files
      summary: Delete a file or directory
      operationId: deleteFileDirectory
      parameters:
      - name: namespace
        in: path
        description: The namespace id
        required: true
        schema:
          type: string
      - name: path
        in: query
        description: The internal storage uri of the file / directory to delete
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: deleteFileDirectory 200 response
  /api/v1/{tenant}/namespaces/{namespace}/files/directory:
    get:
      tags:
      - Files
      summary: List directory content
      operationId: listNamespaceDirectoryFiles
      parameters:
      - name: namespace
        in: path
        description: The namespace id
        required: true
        schema:
          type: string
      - name: path
        in: query
        description: The internal storage uri
        schema:
          type: string
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: listNamespaceDirectoryFiles 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FileAttributes"
    post:
      tags:
      - Files
      summary: Create a directory
      operationId: createNamespaceDirectory
      parameters:
      - name: namespace
        in: path
        description: The namespace id
        required: true
        schema:
          type: string
      - name: path
        in: query
        description: The internal storage uri
        schema:
          type: string
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: createNamespaceDirectory 200 response
  /api/v1/{tenant}/namespaces/{namespace}/files/export:
    get:
      tags:
      - Files
      summary: Export namespace files as a ZIP
      operationId: exportNamespaceFiles
      parameters:
      - name: namespace
        in: path
        description: The namespace id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: exportNamespaceFiles 200 response
          content:
            application/octet-stream:
              schema:
                type: array
                items:
                  type: string
                  format: byte
  /api/v1/{tenant}/namespaces/{namespace}/files/search:
    get:
      tags:
      - Files
      summary: Find files which path contain the given string in their URI
      operationId: searchNamespaceFiles
      parameters:
      - name: namespace
        in: path
        description: The namespace id
        required: true
        schema:
          type: string
      - name: q
        in: query
        description: The string the file path should contain
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: searchNamespaceFiles 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /api/v1/{tenant}/namespaces/{namespace}/files/stats:
    get:
      tags:
      - Files
      summary: "Get namespace file stats such as size, creation & modification dates\
        \ and type"
      operationId: getFileMetadatas
      parameters:
      - name: namespace
        in: path
        description: The namespace id
        required: true
        schema:
          type: string
      - name: path
        in: query
        description: The internal storage uri
        schema:
          type: string
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getFileMetadatas 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FileAttributes"
  /api/v1/{tenant}/namespaces/{namespace}/inherited-secrets:
    get:
      tags:
      - Namespaces
      summary: List inherited secrets
      operationId: getInheritedSecrets
      parameters:
      - name: namespace
        in: path
        description: The namespace id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getInheritedSecrets 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: array
                  items:
                    type: string
  /api/v1/{tenant}/namespaces/{namespace}/kv:
    get:
      tags:
      - KV
      summary: List all keys for a namespace
      operationId: listKeys
      parameters:
      - name: namespace
        in: path
        description: The namespace id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: listKeys 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/KVEntry"
    delete:
      tags:
      - KV
      summary: Bulk-delete multiple key/value pairs from the given namespace.
      operationId: deleteKeyValues
      parameters:
      - name: namespace
        in: path
        description: The namespace id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The keys
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/KVController.ApiDeleteBulkRequest"
        required: true
      responses:
        "200":
          description: deleteKeyValues 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KVController.ApiDeleteBulkResponse"
  /api/v1/{tenant}/namespaces/{namespace}/kv/{key}:
    get:
      tags:
      - KV
      summary: Get value for a key
      operationId: getKeyValue
      parameters:
      - name: namespace
        in: path
        description: The namespace id
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: The key
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getKeyValue 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/KVController.TypedValue"
    put:
      tags:
      - KV
      summary: Puts a key-value pair in store
      operationId: setKeyValue
      parameters:
      - name: namespace
        in: path
        description: The namespace id
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: The key
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: The value of the key
        content:
          application/json:
            schema:
              type: string
          text/plain:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: setKeyValue 200 response
    delete:
      tags:
      - KV
      summary: Delete a key-value pair
      operationId: deleteKeyValue
      parameters:
      - name: namespace
        in: path
        description: The namespace id
        required: true
        schema:
          type: string
      - name: key
        in: path
        description: The key
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: deleteKeyValue 200 response
          content:
            application/json:
              schema:
                type: boolean
  /api/v1/{tenant}/namespaces/{namespace}/secrets:
    get:
      tags:
      - Namespaces
      summary: Get secrets for a namespace
      operationId: listNamespaceSecrets
      parameters:
      - name: namespace
        in: path
        description: The namespace id
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: The current page
        required: true
        schema:
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        description: The current page size
        required: true
        schema:
          type: integer
          format: int32
          default: 10
      - name: sort
        in: query
        description: The sort of current page
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: filters
        in: query
        description: Filters
        required: true
        schema:
          type: array
          items:
            $ref: "#/components/schemas/QueryFilter"
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: listNamespaceSecrets 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApiSecretListResponse"
  /api/v1/{tenant}/plugins:
    get:
      tags:
      - Plugins
      summary: Get list of plugins
      operationId: listPlugins
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: listPlugins 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Plugin"
  /api/v1/{tenant}/plugins/groups/subgroups:
    get:
      tags:
      - Plugins
      summary: Get plugins group by subgroups
      operationId: getPluginBySubgroups
      parameters:
      - name: includeDeprecated
        in: query
        description: Whether to include deprecated plugins
        required: true
        schema:
          type: boolean
          default: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getPluginBySubgroups 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Plugin"
  /api/v1/{tenant}/plugins/icons:
    get:
      tags:
      - Plugins
      summary: Get plugins icons
      operationId: getPluginIcons
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getPluginIcons 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: "#/components/schemas/PluginIcon"
  /api/v1/{tenant}/plugins/icons/groups:
    get:
      tags:
      - Plugins
      summary: Get plugins icons
      operationId: getPluginGroupIcons
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getPluginGroupIcons 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: "#/components/schemas/PluginIcon"
  /api/v1/{tenant}/plugins/inputs:
    get:
      tags:
      - Plugins
      summary: Get all types for an inputs
      operationId: getAllInputTypes
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getAllInputTypes 200 response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InputType"
  /api/v1/{tenant}/plugins/inputs/{type}:
    get:
      tags:
      - Plugins
      summary: Get json schemas for an input type
      description: "The schema will be output as [http://json-schema.org/draft-07/schema](Json\
        \ Schema Draft 7)"
      operationId: getSchemaFromInputType
      parameters:
      - name: type
        in: path
        description: The schema needed
        required: true
        schema:
          $ref: "#/components/schemas/Type"
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getSchemaFromInputType 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentationWithSchema"
  /api/v1/{tenant}/plugins/schemas/{type}:
    get:
      tags:
      - Plugins
      summary: Get all json schemas for a type
      description: "The schema will be output as [http://json-schema.org/draft-07/schema](Json\
        \ Schema Draft 7)"
      operationId: getSchemasFromType
      parameters:
      - name: type
        in: path
        description: The schema needed
        required: true
        schema:
          $ref: "#/components/schemas/SchemaType"
      - name: arrayOf
        in: query
        description: If schema should be an array of requested type
        schema:
          type: boolean
          nullable: true
          default: false
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getSchemasFromType 200 response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
  /api/v1/{tenant}/plugins/{cls}:
    get:
      tags:
      - Plugins
      summary: Get plugin documentation
      operationId: getPluginDocumentation
      parameters:
      - name: cls
        in: path
        description: The plugin full class name
        required: true
        schema:
          type: string
      - name: all
        in: query
        description: Include all the properties
        required: true
        schema:
          type: boolean
          default: false
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getPluginDocumentation 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentationWithSchema"
  /api/v1/{tenant}/plugins/{cls}/versions:
    get:
      tags:
      - Plugins
      summary: Get all versions for a plugin
      operationId: getPluginVersions
      parameters:
      - name: cls
        in: path
        description: The plugin type
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getPluginVersions 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PluginController.ApiPluginVersions"
  /api/v1/{tenant}/plugins/{cls}/versions/{version}:
    get:
      tags:
      - Plugins
      summary: Get plugin documentation
      operationId: getPluginDocumentationFromVersion
      parameters:
      - name: cls
        in: path
        description: The plugin type
        required: true
        schema:
          type: string
      - name: version
        in: path
        description: The plugin version
        required: true
        schema:
          type: string
      - name: all
        in: query
        description: Include all the properties
        required: true
        schema:
          type: boolean
          default: false
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: getPluginDocumentationFromVersion 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentationWithSchema"
  /api/v1/{tenant}/taskruns/search:
    get:
      tags:
      - Executions
      summary: "Search for taskruns, only available with the Elasticsearch repository"
      operationId: searchTaskRun
      parameters:
      - name: page
        in: query
        description: The current page
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        description: The current page size
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 10
      - name: sort
        in: query
        description: The sort of current page
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: filters
        in: query
        description: Filters
        required: true
        schema:
          type: array
          items:
            $ref: "#/components/schemas/QueryFilter"
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: flowId
        in: query
        description: A flow id filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: startDate
        in: query
        description: The start datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: endDate
        in: query
        description: The end datetime
        deprecated: true
        schema:
          type: string
          format: date-time
          nullable: true
      - name: timeRange
        in: query
        description: A time range filter relative to the current time
        deprecated: true
        schema:
          type: string
          nullable: true
        examples:
          Filter last 5 minutes:
            value: PT5M
          Filter last 24 hours:
            value: P1D
      - name: state
        in: query
        description: A state filter
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/State.Type"
      - name: labels
        in: query
        description: A labels filter as a list of 'key:value'
        deprecated: true
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: triggerExecutionId
        in: query
        description: The trigger execution id
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: childFilter
        in: query
        description: A execution child filter
        deprecated: true
        schema:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ExecutionRepositoryInterface.ChildFilter"
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: searchTaskRun 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_TaskRun_"
  /api/v1/{tenant}/triggers:
    put:
      tags:
      - Triggers
      summary: Update a trigger
      operationId: updateTrigger
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trigger"
        required: true
      responses:
        "200":
          description: updateTrigger 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trigger"
  /api/v1/{tenant}/triggers/backfill/delete:
    post:
      tags:
      - Triggers
      summary: Delete a backfill
      operationId: deleteBackfill
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trigger"
        required: true
      responses:
        "200":
          description: deleteBackfill 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trigger"
  /api/v1/{tenant}/triggers/backfill/delete/by-query:
    post:
      tags:
      - Triggers
      summary: Delete backfill for given triggers
      operationId: deleteBackfillByQuery
      parameters:
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: array
                  description: Filters
                  items:
                    $ref: "#/components/schemas/QueryFilter"
        required: true
      responses:
        "200":
          description: deleteBackfillByQuery 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/triggers/backfill/delete/by-triggers:
    post:
      tags:
      - Triggers
      summary: Delete backfill for given triggers
      operationId: deleteBackfillByIds
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Trigger"
        required: true
      responses:
        "200":
          description: deleteBackfillByIds 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/triggers/backfill/pause:
    put:
      tags:
      - Triggers
      summary: Pause a backfill
      operationId: pauseBackfill
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trigger"
        required: true
      responses:
        "200":
          description: pauseBackfill 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trigger"
  /api/v1/{tenant}/triggers/backfill/pause/by-query:
    post:
      tags:
      - Triggers
      summary: Pause backfill for given triggers
      operationId: pauseBackfillByQuery
      parameters:
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: array
                  description: Filters
                  items:
                    $ref: "#/components/schemas/QueryFilter"
        required: true
      responses:
        "200":
          description: pauseBackfillByQuery 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/triggers/backfill/pause/by-triggers:
    post:
      tags:
      - Triggers
      summary: Pause backfill for given triggers
      operationId: pauseBackfillByIds
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Trigger"
        required: true
      responses:
        "200":
          description: pauseBackfillByIds 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/triggers/backfill/unpause:
    put:
      tags:
      - Triggers
      summary: Unpause a backfill
      operationId: unpauseBackfill
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Trigger"
        required: true
      responses:
        "200":
          description: unpauseBackfill 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trigger"
  /api/v1/{tenant}/triggers/backfill/unpause/by-query:
    post:
      tags:
      - Triggers
      summary: Unpause backfill for given triggers
      operationId: unpauseBackfillByQuery
      parameters:
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: array
                  description: Filters
                  items:
                    $ref: "#/components/schemas/QueryFilter"
        required: true
      responses:
        "200":
          description: unpauseBackfillByQuery 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/triggers/backfill/unpause/by-triggers:
    post:
      tags:
      - Triggers
      summary: Unpause backfill for given triggers
      operationId: unpauseBackfillByIds
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Trigger"
        required: true
      responses:
        "200":
          description: unpauseBackfillByIds 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/triggers/search:
    get:
      tags:
      - Triggers
      summary: Search for triggers
      operationId: searchTriggers
      parameters:
      - name: page
        in: query
        description: The current page
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        description: The current page size
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 10
      - name: sort
        in: query
        description: The sort of current page
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: filters
        in: query
        description: Filters
        required: true
        schema:
          type: array
          items:
            $ref: "#/components/schemas/QueryFilter"
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: workerId
        in: query
        description: The identifier of the worker currently evaluating the trigger
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: flowId
        in: query
        description: The flow identifier
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: searchTriggers 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_TriggerController.Triggers_"
  /api/v1/{tenant}/triggers/set-disabled/by-query:
    post:
      tags:
      - Triggers
      summary: Disable/enable triggers by query parameters
      operationId: disabledTriggersByQuery
      parameters:
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: disabled
        in: query
        description: The disabled state
        required: true
        schema:
          type: boolean
          default: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: array
                  description: Filters
                  items:
                    $ref: "#/components/schemas/QueryFilter"
        required: true
      responses:
        "200":
          description: disabledTriggersByQuery 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/triggers/set-disabled/by-triggers:
    post:
      tags:
      - Triggers
      summary: Disable/enable given triggers
      operationId: disabledTriggersByIds
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TriggerController.SetDisabledRequest"
        required: true
      responses:
        "200":
          description: disabledTriggersByIds 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/triggers/unlock/by-query:
    post:
      tags:
      - Triggers
      summary: Unlock triggers by query parameters
      operationId: unlockTriggersByQuery
      parameters:
      - name: q
        in: query
        description: A string filter
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: namespace
        in: query
        description: A namespace filter prefix
        deprecated: true
        schema:
          type: string
          nullable: true
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  type: array
                  description: Filters
                  items:
                    $ref: "#/components/schemas/QueryFilter"
        required: true
      responses:
        "200":
          description: unlockTriggersByQuery 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/triggers/unlock/by-triggers:
    post:
      tags:
      - Triggers
      summary: Unlock given triggers
      operationId: unlockTriggersByIds
      parameters:
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Trigger"
        required: true
      responses:
        "200":
          description: unlockTriggersByIds 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/triggers/{namespace}/{flowId}:
    get:
      tags:
      - Triggers
      summary: Get all triggers for a flow
      operationId: searchTriggersForFlow
      parameters:
      - name: page
        in: query
        description: The current page
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 1
      - name: size
        in: query
        description: The current page size
        required: true
        schema:
          minimum: 1
          type: integer
          format: int32
          default: 10
      - name: sort
        in: query
        description: The sort of current page
        schema:
          type: array
          nullable: true
          items:
            type: string
      - name: q
        in: query
        description: A string filter
        schema:
          type: string
          nullable: true
      - name: namespace
        in: path
        description: The namespace
        required: true
        schema:
          type: string
      - name: flowId
        in: path
        description: The flow id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: searchTriggersForFlow 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PagedResults_Trigger_"
  /api/v1/{tenant}/triggers/{namespace}/{flowId}/{triggerId}/restart:
    post:
      tags:
      - Triggers
      summary: Restart a trigger
      operationId: restartTrigger
      parameters:
      - name: namespace
        in: path
        description: The namespace
        required: true
        schema:
          type: string
      - name: flowId
        in: path
        description: The flow id
        required: true
        schema:
          type: string
      - name: triggerId
        in: path
        description: The trigger id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: restartTrigger 200 response
          content:
            application/json:
              schema:
                type: object
  /api/v1/{tenant}/triggers/{namespace}/{flowId}/{triggerId}/unlock:
    post:
      tags:
      - Triggers
      summary: Unlock a trigger
      operationId: unlockTrigger
      parameters:
      - name: namespace
        in: path
        description: The namespace
        required: true
        schema:
          type: string
      - name: flowId
        in: path
        description: The flow id
        required: true
        schema:
          type: string
      - name: triggerId
        in: path
        description: The trigger id
        required: true
        schema:
          type: string
      - name: tenant
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: unlockTrigger 200 response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Trigger"
components:
  schemas:
    AbstractFlow:
      required:
      - deleted
      - disabled
      - id
      - namespace
      type: object
      properties:
        id:
          maxLength: 100
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9._-]*"
          type: string
        namespace:
          maxLength: 150
          minLength: 1
          pattern: "^[a-z0-9][a-z0-9._-]*"
          type: string
        revision:
          minimum: 1
          type: integer
          format: int32
        inputs:
          type: array
          items:
            $ref: "#/components/schemas/Input_Object_"
        outputs:
          type: array
          items:
            $ref: "#/components/schemas/Output"
        disabled:
          type: boolean
        labels:
          type: object
          oneOf:
          - type: array
          - $ref: "#/components/schemas/Map_Object.Object_"
        variables:
          type: object
          additionalProperties: true
        deleted:
          type: boolean
    AbstractGraph:
      type: object
      properties:
        uid:
          type: string
        type:
          type: string
        branchType:
          $ref: "#/components/schemas/AbstractGraph.BranchType"
    AbstractGraph.BranchType:
      type: string
      enum:
      - ERROR
      - FINALLY
      - AFTER_EXECUTION
    AbstractMetricEntry_Object_:
      required:
      - name
      type: object
      properties:
        type:
          type: string
        value: {}
        name:
          type: string
        description:
          type: string
        tags:
          type: object
          additionalProperties:
            type: string
        timestamp:
          type: string
          format: date-time
    AbstractRetry:
      type: object
    AbstractTrigger:
      required:
      - disabled
      - id
      - type
      type: object
      properties:
        minLogLevel:
          deprecated: true
          allOf:
          - $ref: "#/components/schemas/Level"
        id:
          title: A unique ID for the whole flow.
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*"
          type: string
        type:
          title: The class name for this current trigger.
          minLength: 1
          pattern: "\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*(\\.\\\
            p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*)*"
          type: string
        version:
          title: The version of the plugin to use.
          pattern: "\\d+\\.\\d+\\.\\d+(-[a-zA-Z0-9-]+)?|([a-zA-Z0-9]+)"
          type: string
        description:
          type: string
        conditions:
          title: List of conditions in order to limit the flow trigger.
          type: array
          items:
            $ref: "#/components/schemas/Condition"
        disabled:
          type: boolean
        workerGroup:
          $ref: "#/components/schemas/WorkerGroup"
        logLevel:
          $ref: "#/components/schemas/Level"
        labels:
          title: The labels to pass to the execution created.
          type: object
          oneOf:
          - type: array
          - $ref: "#/components/schemas/Map_Object.Object_"
        stopAfter:
          title: List of execution states after which a trigger should be stopped
            (a.k.a. disabled).
          type: array
          items:
            $ref: "#/components/schemas/State.Type"
        logToFile:
          type: boolean
    AbstractTriggerForExecution:
      required:
      - id
      - type
      type: object
      properties:
        id:
          title: A unique ID for the whole flow.
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*"
          type: string
        type:
          title: The class name for this current trigger.
          minLength: 1
          pattern: "\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*(\\.\\\
            p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*)*"
          type: string
        version:
          title: The version of the plugin to use.
          pattern: "\\d+\\.\\d+\\.\\d+(-[a-zA-Z0-9-]+)?|([a-zA-Z0-9]+)"
          type: string
    ApiSecretListResponse:
      required:
      - readOnly
      - results
      - total
      type: object
      properties:
        readOnly:
          type: boolean
        results:
          type: array
          items:
            $ref: "#/components/schemas/ApiSecretMeta"
        total:
          type: integer
          format: int64
    ApiSecretMeta:
      required:
      - key
      type: object
      properties:
        key:
          type: string
    Backfill:
      title: A backfill configuration.
      required:
      - start
      type: object
      properties:
        start:
          title: The start date.
          type: string
          format: date-time
        end:
          title: The end date.
          type: string
          format: date-time
        currentDate:
          title: The current date of the backfill being done.
          type: string
          format: date-time
        paused:
          title: Whether the backfill is paused.
          type: boolean
        inputs:
          title: The inputs to pass to the backfilled executions.
          type: object
          additionalProperties: true
        labels:
          title: The labels to pass to the backfilled executions.
          type: array
          items:
            $ref: "#/components/schemas/Label"
        previousNextExecutionDate:
          title: The nextExecutionDate before the backfill was created.
          type: string
          format: date-time
    BlueprintController.ApiBlueprintItem:
      required:
      - description
      - id
      - includedTasks
      - publishedAt
      - tags
      - title
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        includedTasks:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string
        publishedAt:
          type: string
          format: date-time
    BlueprintController.ApiBlueprintItemWithSource:
      type: object
      allOf:
      - $ref: "#/components/schemas/BlueprintController.ApiBlueprintItem"
      - properties:
          source:
            type: string
          kind:
            $ref: "#/components/schemas/BlueprintController.Kind"
    BlueprintController.ApiBlueprintTagItem:
      required:
      - id
      - name
      - publishedAt
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        publishedAt:
          type: string
          format: date-time
    BlueprintController.Kind:
      type: string
      enum:
      - APP
      - DASHBOARD
      - FLOW
    BulkErrorResponse:
      type: object
      properties:
        message:
          type: string
        invalids: {}
    BulkResponse:
      type: object
      properties:
        count:
          type: integer
          format: int32
    Chart_ChartOption_:
      required:
      - id
      - type
      type: object
      properties:
        id:
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*"
          type: string
        type:
          minLength: 1
          pattern: "\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*(\\.\\\
            p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*)*"
          type: string
        chartOptions: {}
    Concurrency:
      required:
      - behavior
      - limit
      type: object
      properties:
        limit:
          minimum: 1
          type: integer
          format: int32
        behavior:
          $ref: "#/components/schemas/Concurrency.Behavior"
    Concurrency.Behavior:
      type: string
      enum:
      - QUEUE
      - CANCEL
      - FAIL
    Condition:
      required:
      - type
      type: object
      properties:
        type:
          pattern: "\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*(\\.\\\
            p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*)*"
          type: string
    ConfigurationUsage:
      type: object
      properties:
        repositoryType:
          type: string
        queueType:
          type: string
        storageType:
          type: string
        secretType:
          type: string
        javaSecurityEnabled:
          type: boolean
    DailyExecutionStatistics:
      required:
      - duration
      - executionCounts
      - groupBy
      - startDate
      type: object
      properties:
        startDate:
          type: string
          format: date-time
        duration:
          $ref: "#/components/schemas/DailyExecutionStatistics.Duration"
        executionCounts:
          properties:
            CREATED:
              type: integer
              format: int64
            RUNNING:
              type: integer
              format: int64
            PAUSED:
              type: integer
              format: int64
            RESTARTED:
              type: integer
              format: int64
            KILLING:
              type: integer
              format: int64
            SUCCESS:
              type: integer
              format: int64
            WARNING:
              type: integer
              format: int64
            FAILED:
              type: integer
              format: int64
            KILLED:
              type: integer
              format: int64
            CANCELLED:
              type: integer
              format: int64
            QUEUED:
              type: integer
              format: int64
            RETRYING:
              type: integer
              format: int64
            RETRIED:
              type: integer
              format: int64
            SKIPPED:
              type: integer
              format: int64
        groupBy:
          type: string
    DailyExecutionStatistics.Duration:
      required:
      - avg
      - count
      - max
      - min
      - sum
      type: object
      properties:
        min:
          type: string
        avg:
          type: string
        max:
          type: string
        sum:
          type: string
        count:
          type: integer
          format: int64
    Dashboard:
      required:
      - title
      type: object
      properties:
        title:
          minLength: 1
          type: string
        description:
          type: string
        timeWindow:
          $ref: "#/components/schemas/TimeWindow"
        charts:
          type: array
          items:
            $ref: "#/components/schemas/Chart_ChartOption_"
        sourceCode:
          type: string
    DashboardController.PreviewRequest:
      required:
      - chart
      type: object
      properties:
        chart:
          type: string
        globalFilter:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/GlobalFilter"
    DeletedInterface:
      type: object
      properties:
        deleted:
          type: boolean
    DependsOn:
      type: object
      properties:
        inputs:
          type: array
          nullable: true
          items:
            type: string
        condition:
          type: string
          nullable: true
    DocumentationWithSchema:
      type: object
      properties:
        markdown:
          type: string
        schema:
          $ref: "#/components/schemas/PluginSchema"
    Event_Execution_:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/Execution"
        id:
          type: string
        name:
          type: string
        comment:
          type: string
        retry:
          type: string
    Event_LogEntry_:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/LogEntry"
        id:
          type: string
        name:
          type: string
        comment:
          type: string
        retry:
          type: string
    ExecutableTask.SubflowId:
      required:
      - flowId
      - namespace
      - revision
      type: object
      properties:
        namespace:
          type: string
        flowId:
          type: string
        revision:
          type: integer
          format: int32
          nullable: true
    Execution:
      required:
      - deleted
      - flowId
      - flowRevision
      - id
      - inputs
      - labels
      - metadata
      - namespace
      - originalId
      - outputs
      - parentId
      - state
      - taskRunList
      - traceParent
      - trigger
      - variables
      type: object
      properties:
        labels:
          type: array
          items:
            $ref: "#/components/schemas/Label"
        id:
          type: string
        namespace:
          type: string
        flowId:
          type: string
        flowRevision:
          type: integer
          format: int32
        taskRunList:
          type: array
          items:
            $ref: "#/components/schemas/TaskRun"
        inputs:
          type: object
          additionalProperties: true
        outputs:
          type: object
          additionalProperties: true
        variables:
          type: object
          additionalProperties: true
        state:
          $ref: "#/components/schemas/State"
        parentId:
          type: string
        originalId:
          type: string
        trigger:
          $ref: "#/components/schemas/ExecutionTrigger"
        deleted:
          type: boolean
        metadata:
          $ref: "#/components/schemas/ExecutionMetadata"
        scheduleDate:
          type: string
          format: date-time
          nullable: true
        traceParent:
          type: string
        fixtures:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/TaskFixture"
        kind:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ExecutionKind"
    ExecutionController.ApiValidateExecutionInputsResponse:
      required:
      - id
      - inputs
      - namespace
      type: object
      properties:
        id:
          type: string
        namespace:
          type: string
        inputs:
          type: array
          items:
            $ref: "#/components/schemas/ExecutionController.ApiValidateExecutionInputsResponse.ApiInputAndValue"
    ExecutionController.ApiValidateExecutionInputsResponse.ApiInputAndValue:
      required:
      - enabled
      - errors
      - input
      - value
      type: object
      properties:
        input:
          $ref: "#/components/schemas/Input_Object_"
        value: {}
        enabled:
          type: boolean
        errors:
          type: array
          items:
            $ref: "#/components/schemas/ExecutionController.ApiValidateExecutionInputsResponse.ApiInputError"
    ExecutionController.ApiValidateExecutionInputsResponse.ApiInputError:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    ExecutionController.EvalResult:
      type: object
      properties:
        result:
          type: string
        error:
          type: string
        stackTrace:
          type: string
    ExecutionController.ExecutionResponse:
      required:
      - deleted
      - url
      type: object
      allOf:
      - $ref: "#/components/schemas/Execution"
      - properties:
          deleted:
            type: boolean
          url:
            type: string
            format: uri
    ExecutionController.SetLabelsByIdsRequest:
      required:
      - executionLabels
      - executionsId
      type: object
      properties:
        executionsId:
          type: array
          items:
            type: string
        executionLabels:
          type: array
          items:
            $ref: "#/components/schemas/Label"
    ExecutionController.StateRequest:
      required:
      - state
      - taskRunId
      type: object
      properties:
        taskRunId:
          type: string
        state:
          $ref: "#/components/schemas/State.Type"
    ExecutionKind:
      type: string
      enum:
      - NORMAL
      - TEST
    ExecutionMetadata:
      required:
      - attemptNumber
      - originalCreatedDate
      type: object
      properties:
        attemptNumber:
          type: integer
          format: int32
        originalCreatedDate:
          type: string
          format: date-time
    ExecutionRepositoryInterface.ChildFilter:
      type: string
      enum:
      - CHILD
      - MAIN
    ExecutionTrigger:
      required:
      - id
      - logFile
      - type
      - variables
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        variables:
          type: object
          additionalProperties: true
        logFile:
          type: string
          format: uri
    ExecutionUsage:
      type: object
      properties:
        dailyExecutionsCount:
          type: array
          items:
            $ref: "#/components/schemas/DailyExecutionStatistics"
        dailyTaskRunsCount:
          type: array
          items:
            $ref: "#/components/schemas/DailyExecutionStatistics"
    FileAttributes:
      type: object
      properties:
        fileName:
          type: string
        lastModifiedTime:
          type: integer
          format: int64
        creationTime:
          type: integer
          format: int64
        type:
          $ref: "#/components/schemas/FileAttributes.FileType"
        size:
          type: integer
          format: int64
        metadata:
          type: object
          additionalProperties:
            type: string
    FileAttributes.FileType:
      type: string
      x-enum-varnames:
      - File
      - Directory
      enum:
      - File
      - Directory
    FileMetas:
      required:
      - size
      type: object
      properties:
        size:
          type: integer
          format: int64
    Flow:
      required:
      - deleted
      - disabled
      - id
      - namespace
      - tasks
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractFlow"
      - properties:
          id:
            maxLength: 100
            minLength: 1
            pattern: "^[a-zA-Z0-9][a-zA-Z0-9._-]*"
            type: string
          namespace:
            maxLength: 150
            minLength: 1
            pattern: "^[a-z0-9][a-z0-9._-]*"
            type: string
          revision:
            minimum: 1
            type: integer
            format: int32
          inputs:
            type: array
            items:
              $ref: "#/components/schemas/Input_Object_"
          disabled:
            type: boolean
          labels:
            type: object
            oneOf:
            - type: array
            - $ref: "#/components/schemas/Map_Object.Object_"
          deleted:
            type: boolean
          finally:
            type: array
            items:
              $ref: "#/components/schemas/Task"
          taskDefaults:
            type: array
            deprecated: true
            items:
              $ref: "#/components/schemas/PluginDefault"
          description:
            type: string
          variables:
            type: object
            additionalProperties: true
          tasks:
            minItems: 1
            type: array
            items:
              $ref: "#/components/schemas/Task"
          errors:
            type: array
            items:
              $ref: "#/components/schemas/Task"
          listeners:
            type: array
            deprecated: true
            items:
              $ref: "#/components/schemas/Listener"
          afterExecution:
            type: array
            items:
              $ref: "#/components/schemas/Task"
          triggers:
            type: array
            items:
              $ref: "#/components/schemas/AbstractTrigger"
          pluginDefaults:
            type: array
            items:
              $ref: "#/components/schemas/PluginDefault"
          concurrency:
            $ref: "#/components/schemas/Concurrency"
          outputs:
            title: Output values available and exposes to other flows.
            type: array
            description: Output values make information about the execution of your
              Flow available and expose for other Kestra flows to use. Output values
              are similar to return values in programming languages.
            items:
              $ref: "#/components/schemas/Output"
          retry:
            $ref: "#/components/schemas/AbstractRetry"
          sla:
            type: array
            items:
              $ref: "#/components/schemas/SLA"
    FlowController.TaskValidationType:
      type: string
      enum:
      - TASKS
      - TRIGGERS
    FlowForExecution:
      required:
      - deleted
      - disabled
      - id
      - namespace
      - tasks
      type: object
      allOf:
      - $ref: "#/components/schemas/AbstractFlow"
      - properties:
          id:
            maxLength: 100
            minLength: 1
            pattern: "^[a-zA-Z0-9][a-zA-Z0-9._-]*"
            type: string
          namespace:
            maxLength: 150
            minLength: 1
            pattern: "^[a-z0-9][a-z0-9._-]*"
            type: string
          revision:
            minimum: 1
            type: integer
            format: int32
          inputs:
            type: array
            items:
              $ref: "#/components/schemas/Input_Object_"
          outputs:
            type: array
            items:
              $ref: "#/components/schemas/Output"
          disabled:
            type: boolean
          labels:
            type: object
            oneOf:
            - type: array
            - $ref: "#/components/schemas/Map_Object.Object_"
          variables:
            type: object
            additionalProperties: true
          deleted:
            type: boolean
          tasks:
            minItems: 1
            type: array
            items:
              $ref: "#/components/schemas/TaskForExecution"
          errors:
            type: array
            items:
              $ref: "#/components/schemas/TaskForExecution"
          finally:
            type: array
            items:
              $ref: "#/components/schemas/TaskForExecution"
          afterExecution:
            type: array
            items:
              $ref: "#/components/schemas/TaskForExecution"
          triggers:
            type: array
            items:
              $ref: "#/components/schemas/AbstractTriggerForExecution"
    FlowGraph:
      required:
      - clusters
      - edges
      - flowables
      - nodes
      type: object
      properties:
        nodes:
          type: array
          items:
            $ref: "#/components/schemas/AbstractGraph"
        edges:
          type: array
          items:
            $ref: "#/components/schemas/FlowGraph.Edge"
        clusters:
          type: array
          items:
            $ref: "#/components/schemas/FlowGraph.Cluster"
        flowables:
          type: array
          items:
            type: string
    FlowGraph.Cluster:
      required:
      - cluster
      - end
      - nodes
      - parents
      - start
      type: object
      properties:
        cluster:
          $ref: "#/components/schemas/AbstractGraph"
        nodes:
          type: array
          items:
            type: string
        parents:
          type: array
          items:
            type: string
        start:
          type: string
        end:
          type: string
    FlowGraph.Edge:
      required:
      - relation
      - source
      - target
      type: object
      properties:
        source:
          type: string
        target:
          type: string
        relation:
          $ref: "#/components/schemas/Relation"
    FlowId:
      type: object
      properties:
        id:
          type: string
        namespace:
          type: string
        revision:
          type: integer
          format: int32
        tenantId:
          type: string
    FlowInterface:
      type: object
      allOf:
      - $ref: "#/components/schemas/FlowId"
      - $ref: "#/components/schemas/DeletedInterface"
      - $ref: "#/components/schemas/TenantInterface"
      - properties:
          disabled:
            type: boolean
          deleted:
            type: boolean
          labels:
            type: array
            items:
              $ref: "#/components/schemas/Label"
          inputs:
            type: array
            items:
              $ref: "#/components/schemas/Input_Object_"
          outputs:
            type: array
            items:
              $ref: "#/components/schemas/Output"
          variables:
            type: object
            additionalProperties: true
          concurrency:
            $ref: "#/components/schemas/Concurrency"
          sla:
            type: array
            items:
              $ref: "#/components/schemas/SLA"
          source:
            type: string
    FlowNode:
      required:
      - id
      - namespace
      - uid
      type: object
      properties:
        uid:
          type: string
        namespace:
          type: string
        id:
          type: string
    FlowRelation:
      type: string
      enum:
      - FLOW_TASK
      - FLOW_TRIGGER
    FlowScope:
      type: string
      enum:
      - USER
      - SYSTEM
    FlowTopologyGraph:
      required:
      - edges
      - nodes
      type: object
      properties:
        nodes:
          type: array
          items:
            $ref: "#/components/schemas/FlowNode"
        edges:
          type: array
          items:
            $ref: "#/components/schemas/FlowTopologyGraph.Edge"
    FlowTopologyGraph.Edge:
      required:
      - relation
      - source
      - target
      type: object
      properties:
        source:
          type: string
        target:
          type: string
        relation:
          $ref: "#/components/schemas/FlowRelation"
    FlowUsage:
      type: object
      properties:
        count:
          type: integer
          format: int32
        namespacesCount:
          type: integer
          format: int64
        taskTypeCount:
          type: object
          additionalProperties:
            type: integer
            format: int64
        triggerTypeCount:
          type: object
          additionalProperties:
            type: integer
            format: int64
        taskRunnerTypeCount:
          type: object
          additionalProperties:
            type: integer
            format: int64
    FlowWithSource:
      required:
      - deleted
      - disabled
      - id
      - namespace
      type: object
      allOf:
      - $ref: "#/components/schemas/Flow"
      - $ref: "#/components/schemas/AbstractFlow"
      - properties:
          id:
            maxLength: 100
            minLength: 1
            pattern: "^[a-zA-Z0-9][a-zA-Z0-9._-]*"
            type: string
          namespace:
            maxLength: 150
            minLength: 1
            pattern: "^[a-z0-9][a-z0-9._-]*"
            type: string
          revision:
            minimum: 1
            type: integer
            format: int32
          inputs:
            type: array
            items:
              $ref: "#/components/schemas/Input_Object_"
          disabled:
            type: boolean
          labels:
            type: object
            oneOf:
            - type: array
            - $ref: "#/components/schemas/Map_Object.Object_"
          deleted:
            type: boolean
          variables:
            type: object
            additionalProperties: true
          concurrency:
            $ref: "#/components/schemas/Concurrency"
          outputs:
            title: Output values available and exposes to other flows.
            type: array
            description: Output values make information about the execution of your
              Flow available and expose for other Kestra flows to use. Output values
              are similar to return values in programming languages.
            items:
              $ref: "#/components/schemas/Output"
          sla:
            type: array
            items:
              $ref: "#/components/schemas/SLA"
    GlobalFilter:
      type: object
      properties:
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        namespace:
          type: string
        labels:
          type: object
          additionalProperties:
            type: string
        filters:
          type: array
          items:
            $ref: "#/components/schemas/QueryFilter"
    HostUsage:
      type: object
      properties:
        uuid:
          type: string
        hardware:
          $ref: "#/components/schemas/HostUsage.Hardware"
        os:
          $ref: "#/components/schemas/HostUsage.Os"
        jvm:
          $ref: "#/components/schemas/HostUsage.Jvm"
    HostUsage.Hardware:
      type: object
      properties:
        logicalProcessorCount:
          type: integer
          format: int32
        physicalProcessorCount:
          type: integer
          format: int64
        maxFreq:
          type: integer
          format: int64
        memory:
          type: integer
          format: int64
        knownVmMacAddr:
          type: boolean
        knownDockerMacAddr:
          type: boolean
    HostUsage.Jvm:
      type: object
      properties:
        name:
          type: string
        vendor:
          type: string
        version:
          type: string
    HostUsage.Os:
      type: object
      properties:
        family:
          type: string
        version:
          type: string
        codeName:
          type: string
        buildNumber:
          type: string
    IdWithNamespace:
      type: object
      properties:
        namespace:
          type: string
        id:
          type: string
    InputType:
      required:
      - cls
      - type
      type: object
      properties:
        type:
          type: string
        cls:
          type: string
    Input_Object_:
      required:
      - id
      - type
      type: object
      properties:
        name:
          type: string
          deprecated: true
        id:
          title: The ID of the input.
          minLength: 1
          pattern: "^[a-zA-Z0-9][.a-zA-Z0-9_-]*"
          type: string
        type:
          title: The type of the input.
          allOf:
          - $ref: "#/components/schemas/Type"
        description:
          title: The description of the input.
          type: string
        dependsOn:
          title: The dependencies of the input.
          allOf:
          - $ref: "#/components/schemas/DependsOn"
        required:
          type: boolean
        defaults:
          title: The default value to use if no value is specified.
          type: object
        displayName:
          title: The display name of the input.
          type: string
    KVController.ApiDeleteBulkRequest:
      required:
      - keys
      type: object
      properties:
        keys:
          type: array
          items:
            type: string
      description: API Request for the bulk-delete operation.
    KVController.ApiDeleteBulkResponse:
      required:
      - keys
      type: object
      properties:
        keys:
          type: array
          items:
            type: string
      description: API Response for the bulk-delete operation.
    KVController.TypedValue:
      required:
      - type
      - value
      type: object
      properties:
        type:
          $ref: "#/components/schemas/KVType"
        value: {}
    KVEntry:
      required:
      - creationDate
      - expirationDate
      - key
      - updateDate
      type: object
      properties:
        key:
          type: string
        creationDate:
          type: string
          format: date-time
        updateDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
    KVType:
      type: string
      enum:
      - STRING
      - NUMBER
      - BOOLEAN
      - DATETIME
      - DATE
      - DURATION
      - JSON
    Label:
      required:
      - key
      - value
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    Level:
      type: string
      enum:
      - ERROR
      - WARN
      - INFO
      - DEBUG
      - TRACE
    Listener:
      required:
      - conditions
      - description
      - tasks
      type: object
      properties:
        description:
          type: string
        conditions:
          type: array
          items:
            $ref: "#/components/schemas/Condition"
        tasks:
          minItems: 1
          type: array
          items:
            $ref: "#/components/schemas/Task"
    LogEntry:
      required:
      - deleted
      - flowId
      - level
      - message
      - namespace
      - thread
      - timestamp
      type: object
      properties:
        namespace:
          type: string
        flowId:
          type: string
        taskId:
          type: string
          nullable: true
        executionId:
          type: string
          nullable: true
        taskRunId:
          type: string
          nullable: true
        attemptNumber:
          type: integer
          format: int32
          nullable: true
        triggerId:
          type: string
          nullable: true
        timestamp:
          type: string
          format: date-time
        level:
          $ref: "#/components/schemas/Level"
        thread:
          type: string
        message:
          type: string
        deleted:
          type: boolean
        executionKind:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ExecutionKind"
    Map_Object.Object_:
      type: object
      properties:
        empty:
          type: boolean
    Metric:
      required:
      - baseUnit
      - description
      - name
      - tags
      - type
      - value
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        description:
          type: string
        baseUnit:
          type: string
        tags:
          type: array
          items:
            $ref: "#/components/schemas/Metric.Tag"
        value: {}
    Metric.Tag:
      required:
      - key
      - value
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    MetricAggregation:
      required:
      - date
      - name
      - value
      type: object
      properties:
        name:
          type: string
        value:
          type: number
          format: double
        date:
          type: string
          format: date-time
    MetricAggregations:
      required:
      - aggregations
      - groupBy
      type: object
      properties:
        groupBy:
          type: string
        aggregations:
          type: array
          items:
            $ref: "#/components/schemas/MetricAggregation"
    MetricEntry:
      required:
      - deleted
      - flowId
      - name
      - namespace
      - timestamp
      - type
      - value
      type: object
      properties:
        namespace:
          type: string
        flowId:
          type: string
        taskId:
          type: string
          nullable: true
        executionId:
          type: string
          nullable: true
        taskRunId:
          type: string
          nullable: true
        type:
          type: string
        name:
          type: string
        value:
          type: number
          format: double
        timestamp:
          type: string
          format: date-time
        tags:
          type: object
          additionalProperties:
            type: string
          nullable: true
        deleted:
          type: boolean
        executionKind:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ExecutionKind"
    MiscController.BasicAuthCredentials:
      required:
      - password
      - uid
      - username
      type: object
      properties:
        uid:
          type: string
        username:
          type: string
        password:
          type: string
    MiscController.Configuration:
      type: object
      properties:
        uuid:
          type: string
        version:
          type: string
        commitId:
          type: string
        commitDate:
          type: string
          format: date-time
        isCustomDashboardsEnabled:
          type: boolean
        isTaskRunEnabled:
          type: boolean
        isAnonymousUsageEnabled:
          type: boolean
        isTemplateEnabled:
          type: boolean
        environment:
          $ref: "#/components/schemas/MiscController.Environment"
        url:
          type: string
        preview:
          $ref: "#/components/schemas/MiscController.Preview"
        isBasicAuthEnabled:
          type: boolean
        systemNamespace:
          type: string
        hiddenLabelsPrefixes:
          type: array
          items:
            type: string
        resourceToFilters:
          type: array
          items:
            $ref: "#/components/schemas/QueryFilter.ResourceField"
    MiscController.Environment:
      required:
      - color
      - name
      type: object
      properties:
        name:
          type: string
        color:
          type: string
    MiscController.Preview:
      required:
      - initial
      - max
      type: object
      properties:
        initial:
          type: integer
          format: int32
        max:
          type: integer
          format: int32
    NamespaceLight:
      required:
      - deleted
      - id
      type: object
      properties:
        id:
          pattern: "^[a-z0-9][a-z0-9._-]*"
          type: string
        deleted:
          type: boolean
    NamespaceWithDisabled:
      required:
      - deleted
      - disabled
      - id
      type: object
      allOf:
      - $ref: "#/components/schemas/NamespaceLight"
      - properties:
          id:
            pattern: "^[a-z0-9][a-z0-9._-]*"
            type: string
          deleted:
            type: boolean
          disabled:
            type: boolean
    Output:
      required:
      - id
      - type
      - value
      type: object
      properties:
        id:
          minLength: 1
          pattern: "^[a-zA-Z0-9][.a-zA-Z0-9_-]*"
          type: string
        description:
          type: string
        value: {}
        type:
          $ref: "#/components/schemas/Type"
        displayName:
          type: string
    PagedResults_BlueprintController.ApiBlueprintItem_:
      required:
      - results
      - total
      type: object
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/BlueprintController.ApiBlueprintItem"
        total:
          type: integer
          format: int64
    PagedResults_Dashboard_:
      required:
      - results
      - total
      type: object
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/Dashboard"
        total:
          type: integer
          format: int64
    PagedResults_Execution_:
      required:
      - results
      - total
      type: object
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/Execution"
        total:
          type: integer
          format: int64
    PagedResults_Flow_:
      required:
      - results
      - total
      type: object
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/Flow"
        total:
          type: integer
          format: int64
    PagedResults_LogEntry_:
      required:
      - results
      - total
      type: object
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/LogEntry"
        total:
          type: integer
          format: int64
    PagedResults_Map_String.Object__:
      required:
      - results
      - total
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            additionalProperties: true
        total:
          type: integer
          format: int64
    PagedResults_MetricEntry_:
      required:
      - results
      - total
      type: object
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/MetricEntry"
        total:
          type: integer
          format: int64
    PagedResults_NamespaceWithDisabled_:
      required:
      - results
      - total
      type: object
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/NamespaceWithDisabled"
        total:
          type: integer
          format: int64
    PagedResults_SearchResult_Flow__:
      required:
      - results
      - total
      type: object
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/SearchResult_Flow_"
        total:
          type: integer
          format: int64
    PagedResults_TaskRun_:
      required:
      - results
      - total
      type: object
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/TaskRun"
        total:
          type: integer
          format: int64
    PagedResults_TriggerController.Triggers_:
      required:
      - results
      - total
      type: object
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/TriggerController.Triggers"
        total:
          type: integer
          format: int64
    PagedResults_Trigger_:
      required:
      - results
      - total
      type: object
      properties:
        results:
          type: array
          items:
            $ref: "#/components/schemas/Trigger"
        total:
          type: integer
          format: int64
    Plugin:
      type: object
      properties:
        name:
          type: string
        title:
          type: string
        description:
          type: string
        license:
          type: string
        longDescription:
          type: string
        group:
          type: string
        version:
          type: string
        manifest:
          type: object
          additionalProperties:
            type: string
        tasks:
          type: array
          items:
            type: string
        triggers:
          type: array
          items:
            type: string
        conditions:
          type: array
          items:
            type: string
        controllers:
          type: array
          items:
            type: string
        storages:
          type: array
          items:
            type: string
        secrets:
          type: array
          items:
            type: string
        taskRunners:
          type: array
          items:
            type: string
        guides:
          type: array
          items:
            type: string
        aliases:
          type: array
          items:
            type: string
        apps:
          type: array
          items:
            type: string
        appBlocks:
          type: array
          items:
            type: string
        charts:
          type: array
          items:
            type: string
        dataFilters:
          type: array
          items:
            type: string
        logExporters:
          type: array
          items:
            type: string
        additionalPlugins:
          type: array
          items:
            type: string
        categories:
          type: array
          items:
            $ref: "#/components/schemas/PluginSubGroup.PluginCategory"
        subGroup:
          type: string
    PluginController.ApiPluginVersions:
      required:
      - type
      - versions
      type: object
      properties:
        type:
          type: string
        versions:
          type: array
          items:
            type: string
    PluginDefault:
      required:
      - forced
      - type
      - values
      type: object
      properties:
        type:
          type: string
        forced:
          type: boolean
        values:
          type: object
          additionalProperties: true
    PluginIcon:
      type: object
      properties:
        name:
          type: string
        icon:
          type: string
        flowable:
          type: boolean
    PluginMetric:
      required:
      - count
      - meanTime
      - totalTime
      - type
      type: object
      properties:
        type:
          type: string
        count:
          type: number
          format: double
        totalTime:
          type: number
          format: double
        meanTime:
          type: number
          format: double
    PluginSchema:
      type: object
      properties:
        properties:
          type: object
          additionalProperties: true
        outputs:
          type: object
          additionalProperties: true
        definitions:
          type: object
          additionalProperties: true
    PluginSubGroup.PluginCategory:
      type: string
      enum:
      - DATABASE
      - MESSAGING
      - SCRIPT
      - TRANSFORMATION
      - BATCH
      - ALERTING
      - CLOUD
      - STORAGE
      - OTHER
      - TOOL
      - AI
      - CORE
      - INGESTION
      - BI
    PluginUsage:
      type: object
      properties:
        manifest:
          type: object
          additionalProperties:
            type: string
    Property_Duration_:
      required:
      - expression
      type: object
      properties:
        expression:
          type: string
        value:
          type: string
    Property_String_:
      required:
      - expression
      type: object
      properties:
        expression:
          type: string
        value:
          type: string
    QueryFilter:
      required:
      - field
      - operation
      - value
      type: object
      properties:
        field:
          $ref: "#/components/schemas/QueryFilter.Field"
        operation:
          $ref: "#/components/schemas/QueryFilter.Op"
        value: {}
    QueryFilter.Field:
      type: string
      x-type: String
      enum:
      - QUERY
      - SCOPE
      - NAMESPACE
      - LABELS
      - FLOW_ID
      - START_DATE
      - END_DATE
      - STATE
      - TIME_RANGE
      - TRIGGER_EXECUTION_ID
      - TRIGGER_ID
      - CHILD_FILTER
      - WORKER_ID
      - EXISTING_ONLY
      - MIN_LEVEL
    QueryFilter.FieldOp:
      required:
      - name
      - operations
      - value
      type: object
      properties:
        name:
          type: string
        value:
          type: string
        operations:
          type: array
          items:
            $ref: "#/components/schemas/QueryFilter.Operation"
    QueryFilter.Op:
      type: string
      enum:
      - EQUALS
      - NOT_EQUALS
      - GREATER_THAN
      - LESS_THAN
      - GREATER_THAN_OR_EQUAL_TO
      - LESS_THAN_OR_EQUAL_TO
      - IN
      - NOT_IN
      - STARTS_WITH
      - ENDS_WITH
      - CONTAINS
      - REGEX
      - PREFIX
    QueryFilter.Operation:
      required:
      - name
      - value
      type: object
      properties:
        name:
          type: string
        value:
          type: string
    QueryFilter.ResourceField:
      required:
      - fields
      - name
      type: object
      properties:
        name:
          type: string
        fields:
          type: array
          items:
            $ref: "#/components/schemas/QueryFilter.FieldOp"
    Relation:
      required:
      - relationType
      - value
      type: object
      properties:
        relationType:
          $ref: "#/components/schemas/RelationType"
        value:
          type: string
    RelationType:
      type: string
      enum:
      - SEQUENTIAL
      - CHOICE
      - ERROR
      - FINALLY
      - AFTER_EXECUTION
      - PARALLEL
      - DYNAMIC
    SLA:
      required:
      - behavior
      - id
      - type
      type: object
      properties:
        id:
          minLength: 1
          type: string
        type:
          $ref: "#/components/schemas/SLA.Type"
        behavior:
          $ref: "#/components/schemas/SLA.Behavior"
        labels:
          type: object
          oneOf:
          - type: array
          - $ref: "#/components/schemas/Map_Object.Object_"
    SLA.Behavior:
      type: string
      enum:
      - FAIL
      - CANCEL
      - NONE
    SLA.Type:
      type: string
      enum:
      - MAX_DURATION
      - EXECUTION_ASSERTION
    SchemaType:
      type: string
      enum:
      - FLOW
      - TEMPLATE
      - TASK
      - TRIGGER
      - PLUGINDEFAULT
      - APPS
      - TESTSUITES
      - DASHBOARD
    SearchResult_Flow_:
      required:
      - fragments
      - model
      type: object
      properties:
        model:
          $ref: "#/components/schemas/Flow"
        fragments:
          type: array
          items:
            type: string
    ServerConfig:
      required:
      - liveness
      - terminationGracePeriod
      type: object
      properties:
        workerTaskRestartStrategy:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/WorkerTaskRestartStrategy"
        terminationGracePeriod:
          type: string
          default: 5m
        liveness:
          $ref: "#/components/schemas/ServerConfig.Liveness"
    ServerConfig.Liveness:
      required:
      - enabled
      - heartbeatInterval
      - initialDelay
      - interval
      - timeout
      type: object
      properties:
        enabled:
          type: boolean
          default: true
        interval:
          type: string
          default: 5s
        timeout:
          type: string
          default: 45s
        initialDelay:
          type: string
          default: 45s
        heartbeatInterval:
          type: string
          default: 3s
    ServerInstance:
      required:
      - hostname
      - id
      - metrics
      - props
      - type
      - version
      type: object
      properties:
        id:
          type: string
        type:
          $ref: "#/components/schemas/ServerInstance.Type"
        version:
          type: string
        hostname:
          type: string
        props:
          type: object
          additionalProperties: true
        metrics:
          type: array
          items:
            $ref: "#/components/schemas/Metric"
    ServerInstance.Type:
      type: string
      enum:
      - SERVER
      - STANDALONE
    ServerType:
      type: string
      enum:
      - EXECUTOR
      - INDEXER
      - SCHEDULER
      - STANDALONE
      - WEBSERVER
      - WORKER
    Service.ServiceState:
      type: string
      enum:
      - CREATED
      - RUNNING
      - ERROR
      - DISCONNECTED
      - TERMINATING
      - TERMINATED_GRACEFULLY
      - TERMINATED_FORCED
      - NOT_RUNNING
      - EMPTY
      - MAINTENANCE
    ServiceInstance:
      required:
      - config
      - createdAt
      - events
      - id
      - metrics
      - props
      - seqId
      - server
      - state
      - type
      - updatedAt
      type: object
      properties:
        server:
          $ref: "#/components/schemas/ServerInstance"
        metrics:
          type: array
          items:
            $ref: "#/components/schemas/Metric"
        state:
          $ref: "#/components/schemas/Service.ServiceState"
        id:
          type: string
        type:
          $ref: "#/components/schemas/ServiceType"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        events:
          type: array
          items:
            $ref: "#/components/schemas/ServiceInstance.TimestampedEvent"
        config:
          $ref: "#/components/schemas/ServerConfig"
        props:
          type: object
          additionalProperties: true
        seqId:
          type: integer
          format: int64
    ServiceInstance.TimestampedEvent:
      required:
      - state
      - ts
      - type
      - value
      type: object
      properties:
        ts:
          type: string
          format: date-time
        value:
          type: string
        type:
          type: string
        state:
          $ref: "#/components/schemas/Service.ServiceState"
    ServiceType:
      type: string
      enum:
      - EXECUTOR
      - INDEXER
      - SCHEDULER
      - WEBSERVER
      - WORKER
    ServiceUsage:
      required:
      - dailyStatistics
      type: object
      properties:
        dailyStatistics:
          type: array
          items:
            $ref: "#/components/schemas/ServiceUsage.DailyServiceStatistics"
    ServiceUsage.DailyServiceStatistics:
      required:
      - type
      - values
      type: object
      properties:
        type:
          type: string
        values:
          type: array
          items:
            $ref: "#/components/schemas/ServiceUsage.DailyStatistics"
    ServiceUsage.DailyStatistics:
      required:
      - avg
      - date
      - max
      - min
      type: object
      properties:
        date:
          type: string
          format: date
        min:
          type: integer
          format: int64
        max:
          type: integer
          format: int64
        avg:
          type: integer
          format: int64
    State:
      required:
      - current
      type: object
      properties:
        duration:
          type: string
          readOnly: true
        startDate:
          type: string
          format: date-time
          readOnly: true
        endDate:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        current:
          $ref: "#/components/schemas/State.Type"
        histories:
          type: array
          items:
            $ref: "#/components/schemas/State.History"
    State.History:
      required:
      - date
      - state
      type: object
      properties:
        state:
          $ref: "#/components/schemas/State.Type"
        date:
          type: string
          format: date-time
    State.Type:
      type: string
      enum:
      - CREATED
      - RUNNING
      - PAUSED
      - RESTARTED
      - KILLING
      - SUCCESS
      - WARNING
      - FAILED
      - KILLED
      - CANCELLED
      - QUEUED
      - RETRYING
      - RETRIED
      - SKIPPED
    Task:
      required:
      - id
      - type
      type: object
      properties:
        id:
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*"
          type: string
        type:
          title: The class name of this task.
          minLength: 1
          pattern: "\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*(\\.\\\
            p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*)*"
          type: string
        version:
          title: The version of the plugin to use.
          pattern: "\\d+\\.\\d+\\.\\d+(-[a-zA-Z0-9-]+)?|([a-zA-Z0-9]+)"
          type: string
        description:
          type: string
        retry:
          $ref: "#/components/schemas/AbstractRetry"
        timeout:
          $ref: "#/components/schemas/Property_Duration_"
        disabled:
          type: boolean
        workerGroup:
          $ref: "#/components/schemas/WorkerGroup"
        logLevel:
          $ref: "#/components/schemas/Level"
        allowFailure:
          type: boolean
        logToFile:
          type: boolean
        runIf:
          type: string
        allowWarning:
          type: boolean
    TaskFixture:
      required:
      - description
      - id
      - outputs
      - state
      - value
      type: object
      properties:
        id:
          type: string
        value:
          type: string
        state:
          $ref: "#/components/schemas/State.Type"
        outputs:
          type: object
          additionalProperties: true
        description:
          $ref: "#/components/schemas/Property_String_"
    TaskForExecution:
      required:
      - id
      - type
      type: object
      properties:
        id:
          minLength: 1
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9_-]*"
          type: string
        type:
          title: The class name of this task.
          minLength: 1
          pattern: "\\p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*(\\.\\\
            p{javaJavaIdentifierStart}\\p{javaJavaIdentifierPart}*)*"
          type: string
        version:
          title: The version of the plugin to use.
          pattern: "\\d+\\.\\d+\\.\\d+(-[a-zA-Z0-9-]+)?|([a-zA-Z0-9]+)"
          type: string
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/TaskForExecution"
        inputs:
          type: array
          items:
            $ref: "#/components/schemas/Input_Object_"
        subflowId:
          $ref: "#/components/schemas/ExecutableTask.SubflowId"
    TaskRun:
      required:
      - attempts
      - dynamic
      - executionId
      - flowId
      - id
      - iteration
      - namespace
      - outputs
      - parentTaskRunId
      - state
      - taskId
      - value
      type: object
      properties:
        items:
          type: string
          deprecated: true
        id:
          type: string
        executionId:
          type: string
        namespace:
          type: string
        flowId:
          type: string
        taskId:
          type: string
        parentTaskRunId:
          type: string
        value:
          type: string
        attempts:
          type: array
          items:
            $ref: "#/components/schemas/TaskRunAttempt"
        outputs:
          type: object
          additionalProperties: true
        state:
          $ref: "#/components/schemas/State"
        iteration:
          type: integer
          format: int32
        dynamic:
          type: boolean
    TaskRunAttempt:
      required:
      - state
      type: object
      properties:
        metrics:
          type: array
          deprecated: true
          items:
            $ref: "#/components/schemas/AbstractMetricEntry_Object_"
        state:
          $ref: "#/components/schemas/State"
        workerId:
          type: string
          nullable: true
        logFile:
          type: string
          format: uri
          nullable: true
    TenantInterface:
      type: object
      properties:
        tenantId:
          type: string
    TimeWindow:
      type: object
      properties:
        default:
          type: string
        max:
          type: string
    Trigger:
      type: object
      allOf:
      - $ref: "#/components/schemas/TriggerContext"
      - properties:
          executionId:
            type: string
            nullable: true
          updatedDate:
            type: string
            format: date-time
            nullable: true
          evaluateRunningDate:
            type: string
            format: date-time
            nullable: true
          workerId:
            type: string
            nullable: true
    TriggerContext:
      required:
      - date
      - flowId
      - namespace
      - triggerId
      type: object
      properties:
        disabled:
          type: boolean
        tenantId:
          pattern: "^[a-z0-9][a-z0-9_-]"
          type: string
        namespace:
          type: string
        flowId:
          type: string
        triggerId:
          type: string
        date:
          type: string
          format: date-time
        nextExecutionDate:
          type: string
          format: date-time
          nullable: true
        backfill:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/Backfill"
        stopAfter:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/State.Type"
    TriggerController.SetDisabledRequest:
      required:
      - disabled
      - triggers
      type: object
      properties:
        triggers:
          type: array
          items:
            $ref: "#/components/schemas/Trigger"
        disabled:
          type: boolean
    TriggerController.Triggers:
      required:
      - abstractTrigger
      - triggerContext
      type: object
      properties:
        abstractTrigger:
          $ref: "#/components/schemas/AbstractTrigger"
        triggerContext:
          $ref: "#/components/schemas/Trigger"
    Type:
      type: string
      enum:
      - STRING
      - ENUM
      - SELECT
      - INT
      - FLOAT
      - BOOLEAN
      - BOOL
      - DATETIME
      - DATE
      - TIME
      - DURATION
      - FILE
      - JSON
      - URI
      - SECRET
      - ARRAY
      - MULTISELECT
      - YAML
      - EMAIL
    Usage:
      required:
      - configurations
      - executions
      - flows
      - host
      - instanceUuid
      - plugins
      - serverType
      - startTime
      - startUuid
      - uuid
      - version
      - zoneId
      type: object
      properties:
        uuid:
          type: string
        startUuid:
          type: string
        instanceUuid:
          type: string
        serverType:
          $ref: "#/components/schemas/ServerType"
        version:
          type: string
        zoneId:
          type: string
        uri:
          type: string
          nullable: true
        environments:
          type: array
          nullable: true
          items:
            type: string
        startTime:
          type: string
          format: date-time
        host:
          $ref: "#/components/schemas/HostUsage"
        configurations:
          $ref: "#/components/schemas/ConfigurationUsage"
        plugins:
          type: array
          items:
            $ref: "#/components/schemas/PluginUsage"
        flows:
          $ref: "#/components/schemas/FlowUsage"
        executions:
          $ref: "#/components/schemas/ExecutionUsage"
        services:
          nullable: true
          allOf:
          - $ref: "#/components/schemas/ServiceUsage"
        pluginMetrics:
          type: array
          nullable: true
          items:
            $ref: "#/components/schemas/PluginMetric"
    ValidateConstraintViolation:
      required:
      - constraints
      - deprecationPaths
      - flow
      - index
      - infos
      - namespace
      - outdated
      - warnings
      type: object
      properties:
        flow:
          type: string
        namespace:
          type: string
        index:
          type: integer
          format: int32
        constraints:
          type: string
        outdated:
          type: boolean
        deprecationPaths:
          type: array
          items:
            type: string
        warnings:
          type: array
          items:
            type: string
        infos:
          type: array
          items:
            type: string
    WorkerGroup:
      type: object
      properties:
        key:
          type: string
        fallback:
          $ref: "#/components/schemas/WorkerGroup.Fallback"
    WorkerGroup.Fallback:
      type: string
      enum:
      - FAIL
      - WAIT
      - CANCEL
    WorkerTaskRestartStrategy:
      type: string
      enum:
      - NEVER
      - IMMEDIATELY
      - AFTER_TERMINATION_GRACE_PERIOD
